\documentclass[12pt]{article}

%\usepackage{times}
\usepackage{hyperref}
\hypersetup{pdfpagemode=UseNone} % don't show bookmarks on initial view
\hypersetup{colorlinks, urlcolor={blue}}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{8.65in}
\setlength{\footskip}{0.35in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\begin{document}

%\sffamily
{\textbf{Gestational Age Prediction Using Stochastic Intervention for Variable Importance}}

%\href{http://kbroman.org}{Karl W Broman}
Alejandra Benitez and the Preterm Birth Initiative

%This is a portion of the ``\href{http://www.rqtl.org/rqtltour2.pdf}{A shorter tour of R/qtl}''
%tutorial, developed here in multiple formats to illustrate the use of knitr.
%This particular document is written with \href{http://www.latex-project.org}{LaTeX}.

<<knitr_options, include=FALSE>>=
library(knitr)
library(here)
library(dplyr)
library(geepack)
library(parsedate)
opts_chunk$set(fig.width=12, fig.height=4, fig.path='RnwFigs/',
warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
# install R/qtl package if necessary:
if(!require("qtl")) install.packages("qtl", repos="http://cran.us.r-project.org")
@

\bigskip
%\sffamily 
\textbf{Abstract}
\newline
%\nopagebreak

\textit{Results}

Our preliminary results indicate good classification potential across thresholds (cvAUC 0.75-0.85) while maintaining good specificity. The results also indicate potential to estimate GA at delivery within 3 weeks. A variable importance assessment is forthcoming.

\textit{Conclusions}

Our preliminary data implies our algorithm could guide GA assessment for our primary outcome analysis in Rwanda. Additionally, it has future potential as a pilot in clinical use, as a means for aiding decision-making in treatment and referral for vulnerable newborns. 


\section{Results}
\begin{itemize}
\item Table 1 for population, age, SES, region
\item cvAUC, variable importance can be presented by some dot plot
\item linear plot of predicted continuous GA vs actual to show margins of error
\\

\end{itemize}
%
%\textbf{Results}
%
You then load the R/qtl package using the {\tt library} function:

%<<load_qtl>>=
%library(qtl)
%@



<<echo=FALSE, cache=FALSE>>=

fix_date = function(date) {

ancdate_missing = as.Date(rep(NA, length(date)))

ancdate = parse_date(as.character(date)[!is.na(date)])
class(ancdate)
ancdate = as.Date(ancdate, format = "%m/%d/%Y")
ancdate_missing[!is.na(date)] <- ancdate

return(ancdate_missing)

}

get_us = function(x, arm) {
  study_id_enroll = x[, sprintf('study_id_full_new')]
  # table(arm2$SID)
  # mean(is.na(arm2$study_id_full_new))
  # dim(arm4)
  # table(df$SIDcorrect)
  
  #study_id_enroll = x[, sprintf('study_id_enroll')]
  #study_id_anc1 = x[, sprintf('study_id_anc')]
  m_age_enroll = as.numeric(as.character(x[ ,'m_age']))
  m_age_anc1 = as.numeric(x[ ,'m_age_anc'])
  
  x$mother_age_cat = rep(NA, nrow(x))
  x$mother_age_cat[x$mother_age >= 12 & x$mother_age < 18] = "12-17" 
  x$mother_age_cat[x$mother_age >= 18 & x$mother_age <= 35] = "18-35"
  x$mother_age_cat[x$mother_age > 35] = "$>$ 35"
  #table(df$mother_age_cat)
  #as.numeric
  
  m_stature =  as.numeric(x[ , 'ht_und150'])
  m_wt = as.numeric(x[ , 'wt_1stvisit'])
  
  #date_del = fix_date(x[, 'date_delivery_mat'])
  date_del = as.Date(x[, 'date_delivery_mat'], format= "%d-%b-%y")
  date_del = as.Date(x[, 'date_delivery_mat'], format= "%m/%d/%Y")
  date_del = as.Date(x[, 'date_delivery_mat'], format= "%d %b %y")


  date_anc1 = as.Date(x[, 'anc1date_anc'], format= "%d-%b-%y")
  date_anc1 = as.Date(x[, 'anc1date_anc'], format = "%m/%d/%Y")
  date_anc1 = as.Date(x[, 'anc1date_anc'], format = "%d %b %y")
  
  days_from_anc1_to_del = (date_del - date_anc1)
  wks_from_anc1_to_del = (date_del - date_anc1)/7
  
  ## LMP ##
  lmp = as.Date(x[, sprintf('lmp_anc')], format= "%m/%d/%Y")
  lmp = as.Date(x[, sprintf('lmp_anc')], format= "%d %b %y")
  
  wks_from_lmp_to_del = (date_del - lmp) / 7
  
  ga_at_anc1_by_lmp = (date_anc1 - lmp) / 7
  
  ga_at_deliv_lmp = (ga_at_anc1_by_lmp) + (days_from_anc1_to_del / 7)
  ## LMP ##
  edd = as.Date(x[, sprintf('edd_anc')], format= "%d-%b-%y")
  edd = as.Date(x[, sprintf('edd_anc')], format= "%m/%d/%Y")
  edd = as.Date(x[, sprintf('edd_anc')], format= "%d %b %y")

  ga_at_delivery_by_edd_anc1 = (280 + (date_del - edd)) / 7
  
  #Question 3
  ##GA AT DELIVERY BY GA AT ANC1 ##
  ga_anc1_recorded = (x[, sprintf('anc1ga_anc')])
  ga_anc1_by_edd = 40 - ((edd - date_anc1)/7)
  ga_at_delivery_by_ga_anc1 = ga_anc1_recorded + (days_from_anc1_to_del / 7)
  
  
  ###mother
  parity = as.numeric(x[, "parity_anc"])
  grav = as.numeric(x[, "gravidity_anc"])
  
  fuel = as.numeric(x[, sprintf("fuel_use")])
  
  enough_food = as.numeric(x[, sprintf("hh_enoughfood")])
  ever_no_food = as.numeric(x[, sprintf("hh_evernofood")])
  run_out_food = as.numeric(x[, sprintf("hh_runoutfood")])
  not_enough_food = as.numeric(x[, sprintf("hh_notenoughfood")])
  
  smoke = as.numeric(x[, sprintf("preg_smoke")])
  hh_smoker = as.numeric(x[, sprintf("hh_smoker")])
  
  alc = as.numeric(x[, sprintf("preg_alc")])
  
  ###mother
  
  
  ## BABY
  sex = x[, 'infant_sex']
  muac = as.numeric(x[, sprintf('muac_birth')])
  chest_c = as.numeric(x[, sprintf('cc_birth')])
  weight = as.numeric(as.character(x[, sprintf('bwt_birth')]))
  
  weight[!is.na(weight) & (weight/10) < 1] <- (weight * 1000)[!is.na(weight) & (weight/10) < 1]
  table(weight)
  head_cir =  as.numeric(x[ ,sprintf('hc_birth')])
  length_b =  as.numeric(x[ ,sprintf('length_birth')])
  apgar1 = as.numeric(x[, sprintf('apgar_1mbirth')])
  apgar5 = as.numeric(x[, sprintf('apgar_5mbirth')])
  ## BABY
   if (arm == 2 | arm == 4) {
    #us_edd = date_cleaning(as.Date(x[, sprintf('edd_us')], format = "%Y-%m-%d"))
    us_edd = as.Date(x[, sprintf('edd_us')], format= "%d-%b-%y")
    us_edd = as.Date(x[, sprintf('edd_us')], format= "%m/%d/%Y")
    us_edd = as.Date(x[, sprintf('edd_us')], format= "%d %b %y")
    
    ga_at_us = as.numeric(as.character(x[, sprintf('us_adjga')]))

    us_date =  as.Date(x[, sprintf('us_date')],format= "%m/%d/%Y")
    us_date =  as.Date(x[, sprintf('us_date')],format= "%d %b %y")
    
    #us_date[140:145]
    #x[140:145, 'us_date']
    
    ga_del_by_us_date = ga_at_us + (date_del - us_date)/7
    edd_by_us_date = 7*(40 - ga_at_us) + us_date
    
    ga_us_diff = date_del - us_edd
    ga_del_us = (280 + ga_us_diff) / 7
    
  } else {
    ga_del_us = rep(NA, nrow(x))
    ga_at_us = rep(NA, nrow(x))
    us_date = rep(NA, nrow(x))
  }
  
  
  wks_from_lmp_to_us = (us_date - lmp)/7
  wks_from_anc1_to_us = (us_date - date_anc1)/7
  wks_from_us_to_del = (date_del - us_date)/7
  ######## Question 5 ## GA at delivery by FH @ anc1 ### 
  
  ####
  fun_ht_anc1 = as.numeric(as.character(x[, sprintf('fundalht_1stvisit')]))
  ## check serial fundal height
  
  ga_at_delivery_by_fh_anc1 = fun_ht_anc1 + (days_from_anc1_to_del/7)
  
  ## ga weeks delivery recoded
  ga_weeks_recorded = x[, sprintf('ga_weeks')]

  # study_id_anc1,
  final = data.frame(study_id_enroll, wks_from_anc1_to_del,
                     wks_from_anc1_to_us,
                     wks_from_lmp_to_us, wks_from_lmp_to_del,
                     wks_from_us_to_del,
                     lmp, date_anc1, us_date, date_del, 
                     ga_at_anc1_by_lmp, ga_anc1_by_edd, ga_anc1_recorded,
                     ga_at_us, fun_ht_anc1,
                     edd, edd_by_us_date, us_edd, ga_del_by_us_date,
                     ga_at_deliv_lmp, ga_at_delivery_by_ga_anc1, 
                     ga_at_delivery_by_edd_anc1,
                     ga_at_delivery_by_fh_anc1, ga_del_us, ga_weeks_recorded)
  
  
    frame = data.frame(m_age_enroll, m_age_anc1, m_stature, m_wt, parity, grav, fuel, 
                       enough_food, ever_no_food,
                     run_out_food, not_enough_food, smoke, hh_smoker, alc,
                     sex, weight, head_cir, length_b, apgar1, apgar5)
    frame = data.frame(final, frame)
    frame
}

@

<<load_data, echo=TRUE>>=
## marginal probability of weeks
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY16Sep2019.csv'))

df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))

df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))

##split into arms
@

<<function_for_consort, echo = F>>=
get_consort = function(df, ga_type) {
  
  ##departed after without clinic visit
  df$enroll_but_no_anc1 = !(!is.na(df$enroll_date) & is.na(df$anc1date_anc))
  stayed_for_clinic = table(df$enroll_but_no_anc1, useNA = "always")
  (stayed_for_clinic)
  #anc1_ga_lt_24_weeks
  df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
  df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24
  anc1_ga_lt_24 = table(df$anc_ga_lt_24_wks, useNA = 'always')

  #eligible_enroll_date
  anc1_date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
  valid_anc1 = anc1_date >=  "2017-05-22" & anc1_date <= "2018-10-31"
  df$valid_anc1 = valid_anc1 == T
  elig_enroll_date = table(df$valid_anc1, useNA = 'always')
    
  anc1_ga_lt_24_valid_enroll_date = table((df$valid_anc1 == T & !is.na(df$anc_ga_lt_24_wks) &
                                            df$anc_ga_lt_24_wks == T), useNA = "always")
  
  out_elig_enroll = data.frame(rbind(stayed_for_clinic, anc1_ga_lt_24, elig_enroll_date, anc1_ga_lt_24_valid_enroll_date))
  out_elig_enroll$total = rowSums(out_elig_enroll)


  ## subset ##
  elig_enroll = df %>% filter(!is.na(valid_anc1) & valid_anc1 == T & !is.na(anc_ga_lt_24_wks) & anc_ga_lt_24_wks == T)
  ## subset ##
  
  ## MOTHER BABY PAIRS ##
  #deliver_within_study_w_valid_ga_2_anc
  elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
  elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
  elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
  dates = subset(elig_enroll, select = c(anc1date_anc, date_ancfuvst_2,
                              date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
  number_missing = is.na(dates)
  number_missing_dates = rowSums(number_missing)
  elig_enroll$number_anc = 5 - number_missing_dates
  
  elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
  elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
  valid_recorded_ga_del = c(table(elig_enroll$valid_ga_recorded, useNA = "always"), 0)[c(3,1,2)]
  names(valid_recorded_ga_del)[1] = FALSE
  valid_ga_lmp_del = table(elig_enroll$valid_ga_lmp, useNA = "always")
  
  elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$number_anc >= 2 & 
            elig_enroll$date_del<= "2019-04-16" & 
            (elig_enroll$valid_ga_recorded == T | elig_enroll$valid_ga_lmp == T))
  elig_mother_baby_pair = table(elig, useNA = 'always')
  elig_mother_baby_pair
  
  delivered_before_april_19 = table(elig_enroll$date_del <= "2019-04-16", useNA = "always")
  delivered_before_april_19

    
  ltfu = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$number_anc >= 2 & 
            elig_enroll$date_del<= "2019-04-16") & 
            (elig_enroll$valid_ga_recorded != T | elig_enroll$valid_ga_lmp != T)
  is_ltfu = table(ltfu, useNA = 'always')
  #df_16 = df %>% filter(anc1ga_anc <= 16 & number_anc >= 2)
  
  out_elig_outcome = data.frame(rbind(valid_recorded_ga_del, valid_ga_lmp_del, elig_mother_baby_pair, delivered_before_april_19, is_ltfu))
  out_elig_outcome$total = rowSums(out_elig_outcome)
  out_elig_outcome
  
  out = rbind(out_elig_enroll, out_elig_outcome)

  out

  
}
@

<<inclusion_criteria>>=
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)

A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)

  arm1 = df %>% filter(dhc %in% A1)
  arm2 = df %>% filter(dhc %in% A2)
  arm3 = df %>% filter(dhc %in% A3)
  arm4 = df %>% filter(dhc %in% A4)

@

<<make_consort, echo = F>>=
  a1 = get_consort(arm1)
  a2 = get_consort(arm2)
  a3 = get_consort(arm3)
  a4 = get_consort(arm4)
  library(openxlsx)
  write_out = list(a1, a2, a3, a4)
  names(write_out) = c("arm1", "arm2", "arm3", "arm4")
  ?write.csv
  openxlsx::write.xlsx(write_out, file = here('consort_by_arm.xlsx'), row.names = T)
@
<<consented, echo = F>>=
table(df$Consentgranted)
summary(df)
@

<<inclusion_criteria, echo = F>>=
##valid enroll date
#enrl_dt = fix_date(df$enroll_date)
#enrl_dt = as.Date(df$enroll_date, format= "%d %b %y")
valid_anc1 = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
#enrl_dt = as.Date(df$enroll_date, format= "%m/%d/%Y")
head(df$anc1date_anc)
head(valid_anc1)
#valid_enroll = enrl_dt >= "2017-05-22" & enrl_dt <= "2019-05-31"
#valid_enroll = enrl_dt >= "2017-05-22" & enrl_dt <= "2018-10-31"
valid_anc1 = valid_anc1 >=  "2017-05-22" & valid_anc1 <= "2018-10-31"
## 
df = df[!is.na(valid_anc1) & valid_anc1 == T, ]
# table(valid_enroll)
# table(df$dhc)
@

<<how_many_anc, echo = F>>=
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
                              date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
# ## eligible dates ##

number_missing = is.na(dates)
# head(num_missing)
# head(number_missing)
# head(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
table(df$number_anc)


##nancy has done 24 weeks in her code
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
#df_16 = df %>% filter(anc1ga_anc <= 16 & number_anc >= 2)
df = df %>% filter(anc1ga_anc <= 24 & number_anc >= 2)
#df_16 = df %>% filter(anc1ga_anc <= 16 & number_anc >= 2)
df$date_del = as.Date(df$date_delivery_mat, format = "%m/%d/%Y")
df$lmp = as.Date(df$lmp_anc, format = "%m/%d/%Y")
df$ga_at_del_by_lmp = as.numeric((df$date_del - df$lmp)/7)
summary(df$ga_at_del_by_lmp)
sum(df$ga_at_del_by_lmp < 0, na.rm = T)
sum(df$ga_at_del_by_lmp > 45, na.rm = T)

##women who had eligible enroll date with valid ga
df$valid_ga_recorded = df$ga_weeks >= 20 & df$ga_weeks <= 44
df$valid_ga_lmp = df$ga_at_del_by_lmp >= 20 & df$ga_at_del_by_lmp <= 44

valid_ga_recorded_tab = table(df$valid_ga_recorded)
valid_ga_lmp = table(df$valid_ga_lmp)
kable(valid_ga_lmp)
##women who either (1) delivered by April 16, 2019 or had no outcome
df_recorded = df %>% filter(valid_ga_recorded == T)
df_lmp = df %>% filter(valid_ga_lmp == T)



##LTFU: DELIVERED WITHIN STUDY PERIOD APRIL, IS ELIGIBLE, NO OUTCOME
##valid_ga: 20-44 weeks at birth, based on LMP
## +delivered (HOW TO DECIDE) by APRIL 16, 2019 , w valid GA


df_recorded$elig_deliv = df_recorded$date_del <= "2019-04-16"
df_lmp$elig_deliv = df_lmp$date_del <= "2019-04-16"
##15 delivered outside range
table(df_recorded$elig_deliv)
##9 delivered outside range
table(df_lmp$elig_deliv)

summary(df_recorded$ga_weeks)
#0 na
summary(df_recorded$ga_at_del_by_lmp)
#43 NA 
summary(df_lmp$ga_weeks)
#429 NA
summary(df_lmp$ga_at_del_by_lmp)
##44 NA


#ignore ptb rate

## check ganc var for fuvst
table(df_24$eligible)


@



<<ULTRASOUND, echo = F>>=
get_ga_us= function(df){
  df$ga_weeks = as.numeric(as.character(df$ga_weeks))
  arm1 = df %>% filter(dhc %in% A1)
  arm2 = df %>% filter(dhc %in% A2)
  arm3 = df %>% filter(dhc %in% A3)
  arm4 = df %>% filter(dhc %in% A4)

  us_2 = get_us(arm2, 2)
  us_4 = get_us(arm4, 4)

 
  ##by us_edd
  summary(as.numeric(us_2$ga_del_us))
  summary(as.numeric(us_4$ga_del_us))
  sum(as.numeric(us_2$ga_del_us) < 2, na.rm = T)
  sum(as.numeric(us_4$ga_del_us) < 2, na.rm = T)
  sum(as.numeric(us_2$ga_del_us) > 45, na.rm = T)
  sum(as.numeric(us_4$ga_del_us) > 45, na.rm = T)
  
  ## by us_date and ga at US
  summary(as.numeric(us_2$ga_del_by_us_date))
  summary(as.numeric(us_4$ga_del_by_us_date))
  sum(as.numeric(us_2$ga_del_by_us_date) < 2, na.rm = T)
  sum(as.numeric(us_4$ga_del_by_us_date) < 2, na.rm = T)
  sum(as.numeric(us_2$ga_del_by_us_date) > 45, na.rm = T)
  sum(as.numeric(us_4$ga_del_by_us_date) > 45, na.rm = T)

  
  df2_edd = us_2 %>% filter(ga_del_us >= 10 & ga_del_us <= 44)
  df4_edd = us_4 %>% filter(ga_del_us >= 10 & ga_del_us <= 44)
  
  dim(df2_edd)
  dim(df4_edd)
  sum(!is.na(df2_edd$ga_del_by_us_date))
  sum(!is.na(df2_edd$ga_del_us))
  sum(!is.na(df4_edd$ga_del_by_us_date))
  sum(!is.na(df4_edd$ga_del_us))
  
  ##this provides bigger gap for using ga_del_by_us_date
  df2_usd = us_2 %>% filter(ga_del_by_us_date >= 10 & ga_del_by_us_date <= 43)
  df4_usd = us_4 %>% filter(ga_del_by_us_date >= 10 & ga_del_by_us_date <= 43)
  
  dim(df2_usd)
  dim(df4_usd)
  sum(!is.na(df2_usd$ga_del_by_us_date))
  sum(!is.na(df2_usd$ga_del_us))
  sum(!is.na(df4_usd$ga_del_by_us_date))
  sum(!is.na(df4_usd$ga_del_us))
  
  get_n = function(j) {
    j = as.numeric(j)
    mu = mean(j, na.rm = T)
    med = median(j, na.rm = T)
    n = sum(!is.na(j))
    out = sprintf("mean = %s (n = %s)", round(mu, 3), n)
    return(out)
  }

  #df2 = us_2 %>% filter(ga_del_by_us_date >= 24 & ga_del_by_us_date <= 43)
  #df4 = us_4 %>% filter(ga_del_by_us_date >= 24 & ga_del_by_us_date <= 43)
  
  ## this is for us date variable (not edd date)
  # ptb2 = df2_usd[df2_usd$ga_del_by_us_date < 37, ]
  # ptb4 = df4_usd[df4_usd$ga_del_by_us_date < 37, ]
  # summary(as.numeric(ptb2$ga_del_by_us_date))
  # summary(as.numeric(ptb4$ga_del_by_us_date))
  # sum(is.na(ptb2$ga_del_by_us_date))

    
  #df$birth_weight < 2500 | df$birth_weight >= 2500 & df$birth_weight <= 2999 & df$ga < 37 |
  #                 df$birth_outcome == "Fresh_Still_Birth" & df$ga < 37, "elig_for_ptb", "not_elig_for_ptb"
  

  #defn_ptb2 = df2_usd$ga_weeks_recorded < 37 & df2_usd$weight >=2500 & df2_usd$weight <=2999 | df2_usd$weight < 2500
  #defn_ptb4 = df4_usd$ga_weeks_recorded < 37 & df4_usd$weight >=2500 & df4_usd$weight <=2999 | df4_usd$weight < 2500
  # sum(defn_ptb2, na.rm = T)
  # sum(defn_ptb4, na.rm = T)
  # sum(df2_usd$ga_weeks_recorded < 37, na.rm = T) /sum(!is.na(df2_usd$ga_weeks_recorded))
  # sum(df4_usd$ga_weeks_recorded < 37, na.rm = T)
  #ga_rec_usd = c(get_n(df2_usd$ga_weeks_recorded), get_n(df4_usd$ga_weeks_recorded))
  #ptb_rec_usd = c(get_n(defn_ptb2), get_n(defn_ptb4))

  ptb_usd2 = as.numeric(df2_usd$ga_del_by_us_date) < 37
  ptb_usd4 = as.numeric(df4_usd$ga_del_by_us_date) < 37
  ptb_usd = c(get_n(ptb_usd2), get_n(ptb_usd4))
  ga_usd = c(get_n(df2_usd$ga_del_by_us_date), get_n(df4_usd$ga_del_by_us_date))
  
  ptb_usd_edd2 = as.numeric(df2_usd$ga_del_us) < 37
  ptb_usd_edd4 = as.numeric(df4_usd$ga_del_us) < 37
  ptb_usd_edd = c(get_n(ptb_usd_edd2), get_n(ptb_usd_edd4))
  ga_usd_edd = c(get_n(df2_usd$ga_del_by_us_date), get_n(df4_usd$ga_del_by_us_date))
  
  
  ## edd variable
  ga_rec_edd = c(get_n(df2_edd$ga_weeks_recorded), get_n(df4_edd$ga_weeks_recorded))
  ptb_rec_edd = c(get_n(df2_edd$ga_weeks_recorded < 37), get_n(df4_edd$ga_weeks_recorded < 37))

  
  ptb_edd2 = as.numeric(df2_edd$ga_del_us) < 37
  ptb_edd4 = as.numeric(df4_edd$ga_del_us) < 37
  ptb_edd = c(get_n(ptb_edd2), get_n(ptb_edd4))
  ga_edd = c(get_n(df2_edd$ga_del_us), get_n(df4_edd$ga_del_us))
  
  
  ptb_edd_usd2 = as.numeric(df2_edd$ga_del_by_us_date) < 37
  ptb_edd_usd4 = as.numeric(df4_edd$ga_del_by_us_date) < 37
  ptb_edd_usd = c(get_n(ptb_edd_usd2), get_n(ptb_edd_usd4))
  ga_edd_usd = c(get_n(df2_edd$ga_del_by_us_date), get_n(df4_edd$ga_del_by_us_date))
  
##gestatdelbylmp
  ##ptbcalc
  ##ptbcalc2
  ##ptbcalc3
  ##ptbcalc_byLMP
  ##ptbcalc_US
  all_ptb2 = us_2$ga_weeks_recorded < 37 & us_2$weight >=2500 & us_2$weight <=2999 | us_2$weight < 2500
  all_ptb4 = us_4$ga_weeks_recorded < 37 & us_4$weight >=2500 & us_4$weight <=2999 | us_4$weight < 2500
  #ptb_all2 = as.numeric(as.character(us_2$ga_weeks_recorded)) < 37
  #ptb_all4 = as.numeric(as.character(us_4$ga_weeks_recorded)) < 37
  ptb_all = c(get_n(all_ptb2), get_n(all_ptb4))

  ga_all2 = get_n(as.numeric(as.character(us_2$ga_weeks_recorded)))
  ga_all4 = get_n(as.numeric(as.character(us_4$ga_weeks_recorded)))
  ga_all = c(ga_all2, ga_all4)
  
  # sum(is.na(df2_ptb))
  # ptb_usd_edd, ptb_edd, ptb_edd_usd,
  #ga_usd_edd, ga_edd, ga_edd_usd,
  # ptb_rec_usd, ptb_rec_edd,
  # ga_rec_usd, ga_rec_edd,
  out_ptb = (data.frame(rbind(ptb_usd, ptb_all)))
  out_ga = data.frame(rbind(ga_usd, ga_all))
  names(out_ptb) = c("std. anc", "grp anc")
  names(out_ga) = c("std. anc", "grp_anc")
  out_ptb
  out_ga
  return(out)



  summary(as.numeric(df2$ga_del_us), na.rm = T)
  summary(as.numeric(df4$ga_del_us), na.rm = T)

  summary(as.numeric(df2$ga_del_by_us_date),na.rm = T)
  summary(as.numeric(df4$ga_del_by_us_date),na.rm = T)

  summary(as.numeric(df2$ga_at_delivery_by_ga_anc1), na.rm = T)
  summary(as.numeric(df4$ga_at_delivery_by_ga_anc1), na.rm = T)

  summary(as.numeric(df2$ga_weeks_recorded), na.rm = T)
  summary(as.numeric(df4$ga_weeks_recorded), na.rm = T)
  
}

#get_ga_us(df_16)
get_ga_us(df_24)
@




\bigskip
{\sffamily \textbf{R and package versions used}}
\nopagebreak




<<sessionInfo, include=TRUE, echo=TRUE, results='markup'>>=
sessionInfo()
@

% \bibliography{ga_pred} 
% \bibliographystyle{ieeetr}

\end{document}
