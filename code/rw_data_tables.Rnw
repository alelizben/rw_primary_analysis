\documentclass[12pt]{article}

%\usepackage{times}
\usepackage{hyperref}
\hypersetup{pdfpagemode=UseNone} % don't show bookmarks on initial view
\hypersetup{colorlinks, urlcolor={blue}}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{8.65in}
\setlength{\footskip}{0.35in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\begin{document}

%\sffamily
{\textbf{Gestational Age Prediction Using Stochastic Intervention for Variable Importance}}

%\href{http://kbroman.org}{Karl W Broman}
Alejandra Benitez and the Preterm Birth Initiative

%This is a portion of the ``\href{http://www.rqtl.org/rqtltour2.pdf}{A shorter tour of R/qtl}''
%tutorial, developed here in multiple formats to illustrate the use of knitr.
%This particular document is written with \href{http://www.latex-project.org}{LaTeX}.

<<knitr_options, include=FALSE>>=
library(knitr)
library(here)
library(dplyr)
library(geepack)
library(parsedate)
opts_chunk$set(fig.width=12, fig.height=4, fig.path='RnwFigs/',
warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
# install R/qtl package if necessary:
if(!require("qtl")) install.packages("qtl", repos="http://cran.us.r-project.org")
@

\bigskip
%\sffamily 
\textbf{Abstract}
\newline
%\nopagebreak

\textit{Results}

Our preliminary results indicate good classification potential across thresholds (cvAUC 0.75-0.85) while maintaining good specificity. The results also indicate potential to estimate GA at delivery within 3 weeks. A variable importance assessment is forthcoming.

\textit{Conclusions}

Our preliminary data implies our algorithm could guide GA assessment for our primary outcome analysis in Rwanda. Additionally, it has future potential as a pilot in clinical use, as a means for aiding decision-making in treatment and referral for vulnerable newborns. 


\section{Results}
\begin{itemize}
\item Table 1 for population, age, SES, region
\item cvAUC, variable importance can be presented by some dot plot
\item linear plot of predicted continuous GA vs actual to show margins of error
\\

\end{itemize}
%
%\textbf{Results}
%
You then load the R/qtl package using the {\tt library} function:

%<<load_qtl>>=
%library(qtl)
%@



<<echo=FALSE, cache=FALSE>>=
get_n = function(j) {
    j = as.numeric(j)
    mu = mean(j, na.rm = T)
    med = median(j, na.rm = T)
    n = sum(!is.na(j))
    out = sprintf("mean = %s (n = %s)", round(mu, 3), n)
    return(out)
  }

get_us = function(x, arm) {
  study_id_enroll = x[, sprintf('study_id_full_new')]
  # table(arm2$SID)
  # mean(is.na(arm2$study_id_full_new))
  # dim(arm4)
  # table(df$SIDcorrect)
  
  #study_id_enroll = x[, sprintf('study_id_enroll')]
  #study_id_anc1 = x[, sprintf('study_id_anc')]
  m_age_enroll = as.numeric(as.character(x[ ,'m_age']))
  m_age_anc1 = as.numeric(x[ ,'m_age_anc'])
  
  x$mother_age_cat = rep(NA, nrow(x))
  x$mother_age_cat[x$mother_age >= 12 & x$mother_age < 18] = "12-17" 
  x$mother_age_cat[x$mother_age >= 18 & x$mother_age <= 35] = "18-35"
  x$mother_age_cat[x$mother_age > 35] = "$>$ 35"
  #table(df$mother_age_cat)
  #as.numeric
  
  m_stature =  as.numeric(x[ , 'ht_und150'])
  m_wt = as.numeric(x[ , 'wt_1stvisit'])
  
  #date_del = fix_date(x[, 'date_delivery_mat'])
  date_del = as.Date(x[, 'date_delivery_mat'], format= "%d-%b-%y")
  date_del = as.Date(x[, 'date_delivery_mat'], format= "%m/%d/%Y")


  date_anc1 = as.Date(x[, 'anc1date_anc'], format= "%d-%b-%y")
  date_anc1 = as.Date(x[, 'anc1date_anc'], format = "%m/%d/%Y")
 
  days_from_anc1_to_del = (date_del - date_anc1)
  wks_from_anc1_to_del = (date_del - date_anc1)/7
  
  ## LMP ##
  lmp = as.Date(x[, sprintf('lmp_anc')], format= "%m/%d/%Y")
 
  wks_from_lmp_to_del = (date_del - lmp) / 7
  
  ga_at_anc1_by_lmp = (date_anc1 - lmp) / 7
  
  ga_at_deliv_lmp = (ga_at_anc1_by_lmp) + (days_from_anc1_to_del / 7)
  ## LMP ##
  edd = as.Date(x[, sprintf('edd_anc')], format= "%d-%b-%y")
  edd = as.Date(x[, sprintf('edd_anc')], format= "%m/%d/%Y")

  ga_at_delivery_by_edd_anc1 = (280 + (date_del - edd)) / 7
  
  #Question 3
  ##GA AT DELIVERY BY GA AT ANC1 ##
  ga_anc1_recorded = (x[, sprintf('anc1ga_anc')])
  ga_anc1_by_edd = 40 - ((edd - date_anc1)/7)
  ga_at_delivery_by_ga_anc1 = ga_anc1_recorded + (days_from_anc1_to_del / 7)
  
  
  ###mother
  parity = as.numeric(x[, "parity_anc"])
  grav = as.numeric(x[, "gravidity_anc"])
  
  fuel = as.numeric(x[, sprintf("fuel_use")])
  
  enough_food = as.numeric(x[, sprintf("hh_enoughfood")])
  ever_no_food = as.numeric(x[, sprintf("hh_evernofood")])
  run_out_food = as.numeric(x[, sprintf("hh_runoutfood")])
  not_enough_food = as.numeric(x[, sprintf("hh_notenoughfood")])
  
  smoke = as.numeric(x[, sprintf("preg_smoke")])
  hh_smoker = as.numeric(x[, sprintf("hh_smoker")])
  
  alc = as.numeric(x[, sprintf("preg_alc")])
  
  ###mother
  
  
  ## BABY
  sex = x[, 'infant_sex']
  muac = as.numeric(x[, sprintf('muac_birth')])
  chest_c = as.numeric(x[, sprintf('cc_birth')])
  weight = as.numeric(as.character(x[, sprintf('bwt_birth')]))
  
  weight[!is.na(weight) & (weight/10) < 1] <- (weight * 1000)[!is.na(weight) & (weight/10) < 1]
  table(weight)
  head_cir =  as.numeric(x[ ,sprintf('hc_birth')])
  length_b =  as.numeric(x[ ,sprintf('length_birth')])
  apgar1 = as.numeric(x[, sprintf('apgar_1mbirth')])
  apgar5 = as.numeric(x[, sprintf('apgar_5mbirth')])
  ## BABY
   if (arm == 2 | arm == 4) {
    #us_edd = date_cleaning(as.Date(x[, sprintf('edd_us')], format = "%Y-%m-%d"))
    us_edd = as.Date(x[, sprintf('edd_us')], format= "%d-%b-%y")
    us_edd = as.Date(x[, sprintf('edd_us')], format= "%m/%d/%Y")
   
    ga_at_us = as.numeric(as.character(x[, sprintf('us_adjga')]))

    us_date =  as.Date(x[, sprintf('us_date')],format= "%m/%d/%Y")
    #us_date =  as.Date(x[, sprintf('us_date')],format= "%d %b %y")
    
    #us_date[140:145]
    #x[140:145, 'us_date']
    
    ga_del_by_us_date = ga_at_us + (date_del - us_date)/7
    edd_by_us_date = 7*(40 - ga_at_us) + us_date
    
    ga_us_diff = date_del - us_edd
    ga_del_by_us_edd = (280 + ga_us_diff) / 7
    
  } else {
    ga_del_us = rep(NA, nrow(x))
    ga_at_us = rep(NA, nrow(x))
    us_date = rep(NA, nrow(x))
  }
  
  
  wks_from_lmp_to_us = (us_date - lmp)/7
  wks_from_anc1_to_us = (us_date - date_anc1)/7
  wks_from_us_to_del = (date_del - us_date)/7
  ######## Question 5 ## GA at delivery by FH @ anc1 ### 
  
  ####
  fun_ht_anc1 = as.numeric(as.character(x[, sprintf('fundalht_1stvisit')]))
  ## check serial fundal height
  
  ga_at_delivery_by_fh_anc1 = fun_ht_anc1 + (days_from_anc1_to_del/7)
  
  ## ga weeks delivery recoded
  ga_weeks_recorded = x[, sprintf('ga_weeks')]
  usrec = x$us_rec

  # study_id_anc1,
  final = data.frame(study_id_enroll, wks_from_anc1_to_del,
                     wks_from_anc1_to_us,
                     wks_from_lmp_to_us, wks_from_lmp_to_del,
                     wks_from_us_to_del,
                     lmp, date_anc1, us_date, date_del, 
                     ga_at_anc1_by_lmp, ga_anc1_by_edd, ga_anc1_recorded,
                     ga_at_us, fun_ht_anc1,
                     edd, edd_by_us_date, us_edd, ga_del_by_us_date,
                     ga_at_deliv_lmp, ga_at_delivery_by_ga_anc1, 
                     ga_at_delivery_by_edd_anc1,
                     ga_at_delivery_by_fh_anc1, ga_del_by_us_edd, ga_weeks_recorded, usrec)
  
  
    frame = data.frame(m_age_enroll, m_age_anc1, m_stature, m_wt, parity, grav, fuel, 
                       enough_food, ever_no_food,
                     run_out_food, not_enough_food, smoke, hh_smoker, alc,
                     sex, weight, head_cir, length_b, apgar1, apgar5)
    frame = data.frame(final, frame)
    frame
}

@

<<load_data, echo=TRUE>>=
## marginal probability of weeks
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY18Sep2019.csv'))
#df = read.csv(here('data', 'FinalAnalysisV4ConsentedLabelledRecodedOutliers28July2019.csv'))
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))

##split into arms
@


<<inclusion_criteria>>=
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)

A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)

  # arm1 = df %>% filter(dhc %in% A1)
  # arm2 = df %>% filter(dhc %in% A2)
  # arm3 = df %>% filter(dhc %in% A3)
  # arm4 = df %>% filter(dhc %in% A4)
  
  arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
  #arm2 = df %>% filter(dhc %in% A2 | dhc %in% A1)
  arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
  #arm4 = df %>% filter(dhc %in% A4)

@


<<get_elig, echo = F>>=
  
 get_elig = function(df, type) {
  #df = df %>% filter(!is.na(m_age) & m_age > 15)
  #df = df %>% filter(!is.na(m_age_anc) & m_age_anc > 15)
  df = df %>% filter(is.na(m_age) |  m_age > 15)
  df = df %>% filter(is.na(m_age_anc) | m_age_anc > 15)
  summary(df$m_age_anc)
  
  enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
  anc1date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
  
  #enroll_date >=  "2017-05-22" & 
  #anc1date >=  "2017-05-22" & 
  #| (anc1date <= "2018-10-31")
  valid_enroll = (enroll_date >=  "2017-05-22") & (enroll_date <= "2018-10-31") 
  valid_anc = (anc1date >=  "2017-05-22") & (anc1date <= "2018-10-31")
  #df$valid_enroll = valid_enroll == T
  table(valid_enroll, useNA = 'always')
  table(valid_anc, useNA = "always")
  # good up to hear
  dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
                              date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
  number_missing = is.na(dates)
  number_missing_dates = rowSums(number_missing)

  df$number_anc = 5 - number_missing_dates

  df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
  ##departed after without clinic visit

  if (type == "valid_enroll") {
    
      df = df %>% filter(valid_enroll | valid_anc)
      return(df)
      
  } else if (type == "valid_anc_ga") {
    
      df = df %>% filter(valid_anc & !is.na(anc1ga_anc))
      return(df)
  } else if (type == "valid_anc_date") {
    
      df = df %>% filter(valid_anc)
      return(df)
  }
  ## is possible for one of these to be not valid date
    df = df %>% filter(valid_enroll | valid_anc)
  
  #df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))

  ###anc1_ga_lt_24_weeks

  #df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
  df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 
  summary(df$anc_ga_lt_24_wks)
  ## subset ##
  elig_enroll = df %>% filter(anc_ga_lt_24_wks == TRUE)
  elig_enroll = elig_enroll %>% filter(NumberANCs >= 2)
  dim(elig_enroll)
  
  # t = df %>% filter(eligible == 1)
  # table(t$NumberANCs >=4 )
  # mean(t$NumberANCs)
  # mean(t$anc1ga_anc < 16, na.rm = T)
  # mean(t$NumberANCs >= 4)
  # 

  if (type == "elig_enroll") {
    return(elig_enroll)
  }

  # subset ##
  
  ## MOTHER BABY PAIRS ##
  #deliver_within_study_w_valid_ga_2_anc
  elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
  elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
  elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
 
  elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
  elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
  ##all should be valid recorded GA

  ##elig for primary analysis
  elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31") 
  elig_enroll$elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$NumberANCs >= 2)

  elig_mother_baby = elig_enroll %>% filter(elig == T) 
  
  if (type == "analysis") {
    
    return(elig_mother_baby)
    
  }
 ## NA COME FROM MOSTLY GA RECORDED
  ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
  ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
  has_outcome = elig_mother_baby %>% filter(ltfu == T)
  table(ltfu, useNA = "always")
 }
  
  #df1 = get_elig(arm1, "elig_anc")
  get_anc_covg = function(x){
    n_anc1ga = sum(!is.na(x$anc1ga_anc)) 
    n_anc = sum(!is.na(x$NumberANCs))
    n_anc1date = sum(!is.na(x$anc1date_anc))
    
    ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
    mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
    gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
    gt_2_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
    returned_2_anc_date = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1date)

    out = data.frame(rbind(ga_lt_16, gt_4_anc, gt_2_anc, returned_2_anc_date, mean_anc))
    names(out)[4] = "total (non-na)"
    out$pct = out$TRUE./out$`total (non-na)`
    out = round(out, 3)

    out
  }
  
  df1_valid = get_elig(arm1, "valid_enroll")
  df2_valid = get_elig(arm2, "valid_enroll")
  
  df1_anc1 = get_elig(arm1, "valid_anc_date")
  df2_anc1 = get_elig(arm2, "valid_anc_date")
  
  df1_elig = get_elig(arm1, "elig_enroll")
  df2_elig = get_elig(arm2, "elig_enroll")
  
  #df1_ga = get_elig(arm1, "valid_anc_ga")
  #df2_ga = get_elig(arm2, "valid_anc_ga")
  
  sanc_valid = get_anc_covg(df1_valid)
  ganc_valid = get_anc_covg(df2_valid)
  
  sanc_anc1 = get_anc_covg(df1_anc1)
  ganc_anc1 = get_anc_covg(df2_anc1)
  
  sanc_elig = get_anc_covg(df1_elig)
  ganc_elig = get_anc_covg(df2_elig)
  
  library(openxlsx)
  out = list(sanc_anc1, ganc_anc1)
  names(out) = c("sanc", "ganc")
  write.xlsx(out, file = sprintf("anc_covg_among_anc1_date_all_%s.xlsx", Sys.Date()), row.names = T)
  #get_anc_covg(df1)

    ### secondary outcomes, unadjusted ###

  
  #risk factor identified during ANC at any time
  names_rf = df[, grep( "ancrf", names(df), value = T)[1:7]]
  rf_anc = names_rf == 1
  summary(rf_anc)

  ### secondary outcomes, unadjusted ###
  
  
@



<<function_for_consort, echo = F>>=
get_consort = function(df, ga_type) {
    #eligible_enroll_date
  #anc1_date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
  enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
  valid_enroll = enroll_date >=  "2017-05-22" & enroll_date <= "2018-10-31"
  df$valid_enroll = valid_enroll == T
  elig_enroll_date = table(df$valid_enroll, useNA = 'always')
  dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
                              date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
  number_missing = is.na(dates)
  number_missing_dates = rowSums(number_missing)
  df$number_anc = 5 - number_missing_dates
 

  df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
  ##departed after without clinic visit
  df = df %>% filter(valid_enroll == T)
  
  df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
  departed_without_clinic = table(df$enroll_but_no_anc1, useNA = "always")
  (departed_without_clinic)
  
  ###anc1_ga_lt_24_weeks

  df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
  anc1_ga_lt_24 = table(df$anc_ga_lt_24_wks, useNA = 'always')
  anc1_ga_lt_24
  #anc1_ga_lt_24_valid_enroll_date = table((df$valid_anc1 == T & !is.na(df$anc_ga_lt_24_wks) &
   #                                         df$anc_ga_lt_24_wks == T), useNA = "always")
  
  out_elig_enroll = data.frame(rbind(elig_enroll_date, departed_without_clinic, anc1_ga_lt_24))

  ## subset ##
  elig_enroll = df %>% filter(anc_ga_lt_24_wks)
  table(elig_enroll$anc1ga_anc < 16, useNA = "always")/nrow(elig_enroll)
  ## subset ##
  
  ## MOTHER BABY PAIRS ##
  #deliver_within_study_w_valid_ga_2_anc
  elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
  elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
  elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
 
  elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
  elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
  ##all should be valid recorded GA
  valid_recorded_ga_del = c(table(elig_enroll$valid_ga_recorded, useNA = "always"), 0)[c(3,1,2)]
  names(valid_recorded_ga_del)[1] = FALSE
  valid_ga_lmp_del = table(elig_enroll$valid_ga_lmp, useNA = "always")
  
  delivered_before_march_31 = table(elig_enroll$date_del <= "2019-03-31", useNA = "always")
  delivered_before_march_31

  ## did not deliver within study period or didn't deliver at all 2271 + 91 
  ## did not have >= 2 visits+ 674
  ## did not have valid gestatdel + 116
  delivered_out = elig_enroll %>% filter(date_del > "2019-03-31" | is.na(date_del) )
  elig = (delivered_out$anc1ga_anc <= 24 & delivered_out$number_anc >= 2)
  anc_lt_24_and_2_anc_visits_del_out = table(elig, useNA = 'always')

  
  elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31") 
  elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$number_anc >= 2)
  
  anc_lt_24_and_2_anc_visits = table(elig, useNA = 'always')
  
  elig_mother_baby = elig_enroll %>% filter(elig == T) 
  table(elig_mother_baby$valid_ga_lmp, useNA = 'always')
 
  ### NA COME FROM MOSTLY GA RECORDED
  ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
  ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
  
  ##consort diag

  sum(is.na(elig_mother_baby$valid_ga_lmp) | elig_mother_baby$valid_ga_lmp == F)
  sum(is.na(elig_mother_baby$valid_ga_recorded))
  sum(elig_mother_baby$valid_ga_recorded == F, na.rm = T)
  
  ## 50 where both are NA
   sum(is.na(elig_mother_baby$valid_ga_lmp) & is.na(elig_mother_baby$valid_ga_recorded))
   sum(elig_mother_baby$valid_ga_lmp == F & is.na(elig_mother_baby$valid_ga_recorded), na.rm = T)
      #### this adds up to 116!!!!!!!
   ##either BOTH are NA OR when valid_ga_lmp is false, there no ga recorded to compensate. 
   table(elig_mother_baby$valid_ga_recorded[elig_mother_baby$valid_ga_lmp == F], useNA = "always")
   table(elig_mother_baby$valid_ga_recorded[is.na(elig_mother_baby$valid_ga_lmp)], useNA = "always")

   summary(elig_mother_baby$ga_at_del_by_lmp)
   sum(elig_mother_baby$ga_at_del_by_lmp < 20, na.rm = T)
   sum(elig_mother_baby$ga_at_del_by_lmp >= 44, na.rm = T)
  table(elig_mother_baby$valid_ga_lmp, useNA ='always')
  table(elig_mother_baby$valid_ga_recorded, useNA ='always')
   ##consort diagram
   
  attained_outcome = c(table(ltfu, useNA = 'always'), 0)[c(3, 1, 2)]
  attained_outcome
  names(attained_outcome)[1] = "FALSE"

  #df_16 = df %>% filter(anc1ga_anc <= 16 & number_anc >= 2)
  
  #valid_recorded_ga_del, valid_ga_lmp_del, 
  out_elig_mother_baby = data.frame(rbind(delivered_before_march_31, 
                                      anc_lt_24_and_2_anc_visits_del_out,
                                      anc_lt_24_and_2_anc_visits,
                                      attained_outcome))

  #out_elig_enroll, 
  out = rbind(out_elig_enroll, out_elig_mother_baby)
  out$total = rowSums(out)

  out

  
}
@


<<make_consort, echo = F>>=
  a1 = get_consort(arm1)
  a2 = get_consort(arm2)
  
  
  a3 = get_consort(arm3)
  a4 = get_consort(arm4)
  library(openxlsx)
  write_out = list(a1, a2, a3, a4)
  names(write_out) = c("arm1", "arm2", "arm3", "arm4")
  write_out = list(a1, a2)
  names(write_out) = c("sANC", "gANC")

  ?write.csv
  openxlsx::write.xlsx(write_out, file = here('consort_by_group.xlsx'), row.names = T)
@
<<consented, echo = F>>=
table(df$Consentgranted)
summary(df)
@

<<get_mean_ci, echo = F>>=
#simga hat squared is SSE divided by n-2
var(yhat) = var(x %*% inv(t(x)%*%x)*t(x) %*% y)
H = x %*% inv(t(x)%*%x)*t(x)
var(yhat) = H %*% (SSE/(n-2)) %*% H
var(yhat) = (SSE/(n-2)) %*% H
@

<<ULTRASOUND, echo = F>>=
  arm1 = df %>% filter(dhc %in% A1)
  arm2 = df %>% filter(dhc %in% A2)
  arm3 = df %>% filter(dhc %in% A3)
  arm4 = df %>% filter(dhc %in% A4)
  
  df1 = get_elig(arm2, "analysis")
  df2 = get_elig(arm4, "analysis")
  
get_us_rates = function(df) {
     df$ga_weeks = as.numeric(as.character(df$ga_weeks))
# 
#   us_2 = get_us(arm2, 2)
#   us_4 = get_us(arm4, 4)

#   

#   table(us_2$usrec, useNA = "always")
#   table(us_4$usrec, useNA = "always")

  ##us_rec
  # table(arm2$us_rec, useNA = "always")
  # table(arm4$us_rec, useNA = "always")
  us2 = df %>% filter(us_rec == 1)
  #us4 = arm4 %>% filter(us_rec == 1)
  us_2 = get_us(us2, 2)
  #us_4 = get_us(us4, 4)
  us_2 = us_2[!is.na(us_2$ga_del_by_us_date) | !is.na(us_2$ga_del_by_us_edd), ]
  #us_4 = us_4[!is.na(us_4$ga_del_by_us_date) | !is.na(us_4$ga_del_by_us_edd), ]
  
   # mean(is.na(us_2$ga_del_by_us_date))
   # mean(is.na(us_2$ga_del_by_us_edd))
   # mean(is.na(us_4$ga_del_by_us_date))
   # mean(is.na(us_4$ga_del_by_us_edd))

  df2 = us_2 %>% filter(ga_del_by_us_edd >= 20 & ga_del_by_us_edd <= 44 | 
                              ga_del_by_us_date >= 20 & ga_del_by_us_date <= 44)
 # df4 = us_4 %>% filter(ga_del_by_us_edd >= 10 & ga_del_by_us_edd <= 44 | 
  #                            ga_del_by_us_date >= 10 & ga_del_by_us_date <= 44)
  return(df2)
  
  # summary(us_2$ga_del_by_us_date >= 10)
  # summary(us_4$ga_del_by_us_date >= 10)
  # 
  # summary(us_2$ga_del_by_us_edd >= 10)
  # summary(us_4$ga_del_by_us_edd >= 10)
  #among these women what is ptb rate
}
df1us = get_us_rates(df1)
df2us = get_us_rates(df2)
  
    output_ptb_rate = function(df) {
    
    n_usdate = sum(!is.na(df$ga_del_by_us_date)) 
    n_usedd = sum(!is.na(df$ga_del_by_us_edd))
    n_gaweeks = sum(!is.na(df$ga_weeks_recorded))
    n_lmp = sum(!is.na(df$ga_at_deliv_lmp))
  
    by_us_date = c(table(df$ga_del_by_us_date < 37, useNA = "always"), n_usdate)
    by_us_edd = c(table(df$ga_del_by_us_edd < 37, useNA = "always"), n_usedd)
    by_ga_recorded = c(table(df$ga_weeks_recorded < 37, useNA = "always"), n_gaweeks)
    by_lmp = c(table(df$ga_at_deliv_lmp < 37, useNA = "always"), n_lmp)
    
    out = data.frame(rbind(by_us_date, by_us_edd, by_ga_recorded, by_lmp))
    names(out)[4] = "N"
    out$ptb_rate = round(out$TRUE./out$N, 3)
    
    out
    }
    
  out2 = output_ptb_rate(df1us)
  out4 = output_ptb_rate(df2us)
  
  library(openxlsx)
  out = list(out2, out4)
  names(out) = c("arm2", "arm4")
  write.xlsx(out, file = "us_rec_rates_among_elig_primary_analysis.xlsx", row.names = T)
  

get_ga_us= function(df){
  ## point of 2anc , <24 wks, enrolled, delivered march, mothers age
  ## additional us data that's being collected
 
  # library(openxlsx)
  # out = list(out2, out4)
  # names(out) = c("arm2", "arm4")
  # write.xlsx(out, file = "ptb_rates_us_rec.xlsx")
  
  table(arm4$us_rec, useNA = "always")

  ##us_rec
 
  ##by us_edd
  summary(as.numeric(us_2$ga_del_us))
  summary(as.numeric(us_4$ga_del_us))
  sum(as.numeric(us_2$ga_del_us) < 2, na.rm = T)
  sum(as.numeric(us_4$ga_del_us) < 2, na.rm = T)
  sum(as.numeric(us_2$ga_del_us) > 45, na.rm = T)
  sum(as.numeric(us_4$ga_del_us) > 45, na.rm = T)
  
  ## by us_date and ga at US
  summary(as.numeric(us_2$ga_del_by_us_date))
  summary(as.numeric(us_4$ga_del_by_us_date))
  sum(as.numeric(us_2$ga_del_by_us_date) < 2, na.rm = T)
  sum(as.numeric(us_4$ga_del_by_us_date) < 2, na.rm = T)
  sum(as.numeric(us_2$ga_del_by_us_date) > 45, na.rm = T)
  sum(as.numeric(us_4$ga_del_by_us_date) > 45, na.rm = T)

  
  df2_edd = us_2 %>% filter(ga_del_us >= 10 & ga_del_us <= 44)
  df4_edd = us_4 %>% filter(ga_del_us >= 10 & ga_del_us <= 44)
  
  dim(df2_edd)
  dim(df4_edd)
  sum(!is.na(df2_edd$ga_del_by_us_date))
  sum(!is.na(df2_edd$ga_del_us))
  sum(!is.na(df4_edd$ga_del_by_us_date))
  sum(!is.na(df4_edd$ga_del_us))
  
  ##this provides bigger gap for using ga_del_by_us_date
  df2_usd = us_2 %>% filter(ga_del_by_us_date >= 10 & ga_del_by_us_date <= 43)
  df4_usd = us_4 %>% filter(ga_del_by_us_date >= 10 & ga_del_by_us_date <= 43)
  
  dim(df2_usd)
  dim(df4_usd)
  sum(!is.na(df2_usd$ga_del_by_us_date))
  sum(!is.na(df2_usd$ga_del_us))
  sum(!is.na(df4_usd$ga_del_by_us_date))
  sum(!is.na(df4_usd$ga_del_us))
  

  #df2 = us_2 %>% filter(ga_del_by_us_date >= 24 & ga_del_by_us_date <= 43)
  #df4 = us_4 %>% filter(ga_del_by_us_date >= 24 & ga_del_by_us_date <= 43)
  
  ## this is for us date variable (not edd date)
  # ptb2 = df2_usd[df2_usd$ga_del_by_us_date < 37, ]
  # ptb4 = df4_usd[df4_usd$ga_del_by_us_date < 37, ]
  # summary(as.numeric(ptb2$ga_del_by_us_date))
  # summary(as.numeric(ptb4$ga_del_by_us_date))
  # sum(is.na(ptb2$ga_del_by_us_date))

    
  #df$birth_weight < 2500 | df$birth_weight >= 2500 & df$birth_weight <= 2999 & df$ga < 37 |
  #                 df$birth_outcome == "Fresh_Still_Birth" & df$ga < 37, "elig_for_ptb", "not_elig_for_ptb"
  

  #defn_ptb2 = df2_usd$ga_weeks_recorded < 37 & df2_usd$weight >=2500 & df2_usd$weight <=2999 | df2_usd$weight < 2500
  #defn_ptb4 = df4_usd$ga_weeks_recorded < 37 & df4_usd$weight >=2500 & df4_usd$weight <=2999 | df4_usd$weight < 2500
  # sum(defn_ptb2, na.rm = T)
  # sum(defn_ptb4, na.rm = T)
  # sum(df2_usd$ga_weeks_recorded < 37, na.rm = T) /sum(!is.na(df2_usd$ga_weeks_recorded))
  # sum(df4_usd$ga_weeks_recorded < 37, na.rm = T)
  #ga_rec_usd = c(get_n(df2_usd$ga_weeks_recorded), get_n(df4_usd$ga_weeks_recorded))
  #ptb_rec_usd = c(get_n(defn_ptb2), get_n(defn_ptb4))

  ptb_usd2 = as.numeric(df2_usd$ga_del_by_us_date) < 37
  ptb_usd4 = as.numeric(df4_usd$ga_del_by_us_date) < 37
  ptb_usd = c(get_n(ptb_usd2), get_n(ptb_usd4))
  ga_usd = c(get_n(df2_usd$ga_del_by_us_date), get_n(df4_usd$ga_del_by_us_date))
  
  ptb_usd_edd2 = as.numeric(df2_usd$ga_del_us) < 37
  ptb_usd_edd4 = as.numeric(df4_usd$ga_del_us) < 37
  ptb_usd_edd = c(get_n(ptb_usd_edd2), get_n(ptb_usd_edd4))
  ga_usd_edd = c(get_n(df2_usd$ga_del_by_us_date), get_n(df4_usd$ga_del_by_us_date))
  
  
  ## edd variable
  ga_rec_edd = c(get_n(df2_edd$ga_weeks_recorded), get_n(df4_edd$ga_weeks_recorded))
  ptb_rec_edd = c(get_n(df2_edd$ga_weeks_recorded < 37), get_n(df4_edd$ga_weeks_recorded < 37))

  
  ptb_edd2 = as.numeric(df2_edd$ga_del_us) < 37
  ptb_edd4 = as.numeric(df4_edd$ga_del_us) < 37
  ptb_edd = c(get_n(ptb_edd2), get_n(ptb_edd4))
  ga_edd = c(get_n(df2_edd$ga_del_us), get_n(df4_edd$ga_del_us))
  
  
  ptb_edd_usd2 = as.numeric(df2_edd$ga_del_by_us_date) < 37
  ptb_edd_usd4 = as.numeric(df4_edd$ga_del_by_us_date) < 37
  ptb_edd_usd = c(get_n(ptb_edd_usd2), get_n(ptb_edd_usd4))
  ga_edd_usd = c(get_n(df2_edd$ga_del_by_us_date), get_n(df4_edd$ga_del_by_us_date))
  
##gestatdelbylmp
  ##ptbcalc
  ##ptbcalc2
  ##ptbcalc3
  ##ptbcalc_byLMP
  ##ptbcalc_US
  all_ptb2 = us_2$ga_weeks_recorded < 37 & us_2$weight >=2500 & us_2$weight <=2999 | us_2$weight < 2500
  all_ptb4 = us_4$ga_weeks_recorded < 37 & us_4$weight >=2500 & us_4$weight <=2999 | us_4$weight < 2500
  #ptb_all2 = as.numeric(as.character(us_2$ga_weeks_recorded)) < 37
  #ptb_all4 = as.numeric(as.character(us_4$ga_weeks_recorded)) < 37
  ptb_all = c(get_n(all_ptb2), get_n(all_ptb4))

  ga_all2 = get_n(as.numeric(as.character(us_2$ga_weeks_recorded)))
  ga_all4 = get_n(as.numeric(as.character(us_4$ga_weeks_recorded)))
  ga_all = c(ga_all2, ga_all4)
  
  # sum(is.na(df2_ptb))
  # ptb_usd_edd, ptb_edd, ptb_edd_usd,
  #ga_usd_edd, ga_edd, ga_edd_usd,
  # ptb_rec_usd, ptb_rec_edd,
  # ga_rec_usd, ga_rec_edd,
  out_ptb = (data.frame(rbind(ptb_usd, ptb_all)))
  out_ga = data.frame(rbind(ga_usd, ga_all))
  names(out_ptb) = c("std. anc", "grp anc")
  names(out_ga) = c("std. anc", "grp_anc")
  out_ptb
  out_ga
  return(out)



  summary(as.numeric(df2$ga_del_us), na.rm = T)
  summary(as.numeric(df4$ga_del_us), na.rm = T)

  summary(as.numeric(df2$ga_del_by_us_date),na.rm = T)
  summary(as.numeric(df4$ga_del_by_us_date),na.rm = T)

  summary(as.numeric(df2$ga_at_delivery_by_ga_anc1), na.rm = T)
  summary(as.numeric(df4$ga_at_delivery_by_ga_anc1), na.rm = T)

  summary(as.numeric(df2$ga_weeks_recorded), na.rm = T)
  summary(as.numeric(df4$ga_weeks_recorded), na.rm = T)
  
}

#get_ga_us(df_16)
get_ga_us(df_24)
@




\bigskip
{\sffamily \textbf{R and package versions used}}
\nopagebreak




<<sessionInfo, include=TRUE, echo=TRUE, results='markup'>>=
sessionInfo()
@

% \bibliography{ga_pred} 
% \bibliographystyle{ieeetr}

\end{document}
