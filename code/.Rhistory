df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))
source(here('code', "rw_consort_functions.R"))
source(here('code', "ga_pred", "functions.R"))
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1)
arm2 = df %>% filter(dhc %in% A2)
arm3 = df %>% filter(dhc %in% A3)
arm4 = df %>% filter(dhc %in% A4)
df1 = get_elig(arm1, "elig_enroll")
df3 = get_elig(arm3, "elig_enroll")
us_1 = get_us(df1, 2)
us_3 = get_us(df3, 4)
new_frame = make_data(us_1, us_3, "binomial", wk_thresh = 20, 1)
dim(new_frame)
nrow(new_frame)/(nrow(df1) + nrow(df3))
7.7 /22
dim(train)
plot_data = subset(train, select = c(Arm, dhc, mother_age_cat, ga_del_by_us_date, ga_del_by_us_edd, ga_at_deliv_lmp, ga_weeks_recorded, m_age_enroll))
get_auc(out_binom, data.frame(y = as.numeric(train$y < 37)), 5, "ML Algorithm for Predicting Preterm Birth", type = "sens")
get_auc(out_recorded_binom, data.frame(y = as.numeric(plot_data$ga_del_by_us_date < 37)), 5, "Register-Recorded GA for Predicting Preterm Birth")
get_auc(out_recorded_binom, data.frame(y = as.numeric(plot_data$ga_del_by_us_date < 37)), 5, "Register-Recorded GA for Predicting Preterm Birth", type = "sens")
get_auc(out_binom, data.frame(y = as.numeric(train$y < 37)), folds = 5, type = "sens",  name= "")
out = out_binom
yhat = out$SL.predict
pred = lapply(out$folds, function(x) yhat[x])
train$y
train$y = as.numeric(train$y < 37)
summary(train$y)
yhat = out$SL.predict
pred = lapply(out$folds, function(x) yhat[x])
labs = lapply(out$folds, function(x) train$y[x])
pred
labs
est = pred[[1]]
y = labs[[1]]
yh = sort(est)
yh
spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
get+spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
thresh
(sapply(yh, function(x) get_spec(x, est, y))
)
yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
length(yhat)
est[y == 1]
c(mean(est[y == 1] > thresh), thresh)
get_sens = function(est, y) {
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
sens = c(mean(est[y == 1] > thresh), thresh)
sens
}
get_sens = function(est, y) {
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
sens = c(mean(est[y == 1] > thresh))
sens
}
cvsens =   mapply(function(x, y) get_sens(x, y, train), pred, labs)
cvsens =   mapply(function(x, y) get_sens(x, y), pred, labs)
cvsens
mean(cvsens)
140 - 68
140 - 66
pred
labs
est = pred[[1]]
y = labs[[2]]
est = pred[[2]]
length(y)
length(est)
length(pred[[1]])
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
yh
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
est
yhat
get_spec(x, est, y)
sapply(yh, function(x) get_spec(x, est, y))
yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
est[y == 1]
sens = c(mean(est[y == 1] > thresh))
sens
