# mean(t$NumberANCs)
# mean(t$anc1ga_anc < 16, na.rm = T)
# mean(t$NumberANCs >= 4)
#
if (type == "elig_anc") {
return(elig_enroll)
}
# subset ##
## MOTHER BABY PAIRS ##
#deliver_within_study_w_valid_ga_2_anc
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
##all should be valid recorded GA
##elig for primary analysis
elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31")
elig_enroll$elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$NumberANCs >= 2)
elig_mother_baby = elig_enroll %>% filter(elig == T)
if (type == "analysis") {
return(elig_mother_baby)
}
## NA COME FROM MOSTLY GA RECORDED
ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
has_outcome = elig_mother_baby %>% filter(ltfu == T)
table(ltfu, useNA = "always")
}
df1_elig = get_elig(arm1, "enroll")
df2_elig = get_elig(arm2, "enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
returned_2_ga_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1ga)
returned_2_anc_date = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, returned_2_ga_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
sanc_elig = get_anc_covg(df1_elig)
ganc_elig = get_anc_covg(df2_elig)
sanc_anc1 = get_anc_covg(df1_anc1)
ganc_anc1 = get_anc_covg(df2_anc1)
sanc_elig
sanc_anc1
ganc_anc1 = get_anc_covg(df2_anc1)
ganc_elig
ganc_anc1
library(openxlsx)
out = list(sanc, ganc)
out = list(sanc_anc1, ganc_anc1)
names(out) = c("sanc", "ganc")
write.xlsx(out, file = sprintf("anc_covg_among_anc1_date_%s.xlsx", Sys.Date()), row.names = T)
get_elig = function(df, type) {
#df = df %>% filter(!is.na(m_age) & m_age > 15)
#df = df %>% filter(!is.na(m_age_anc) & m_age_anc > 15)
df = df %>% filter(is.na(m_age) |  m_age > 15)
df = df %>% filter(is.na(m_age_anc) | m_age_anc > 15)
summary(df$m_age_anc)
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
anc1date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
#enroll_date >=  "2017-05-22" &
#anc1date >=  "2017-05-22" &
#| (anc1date <= "2018-10-31")
valid_enroll = (enroll_date >=  "2017-05-22") & (enroll_date <= "2018-10-31")
valid_anc = (anc1date >=  "2017-05-22") & (anc1date <= "2018-10-31")
#df$valid_enroll = valid_enroll == T
table(valid_enroll, useNA = 'always')
table(valid_anc, useNA = "always")
# good up to hear
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
##departed after without clinic visit
if (type == "valid_enroll") {
df = df %>% filter(valid_enroll | valid_anc)
return(df)
} else if (type == "valid_anc_ga") {
df = df %>% filter(valid_anc & !is.na(anc1ga_anc))
return(df)
} else if (type == "valid_anc_date") {
df = df %>% filter(valid_anc)
return(df)
}
## is possible for one of these to be not valid date
df = df %>% filter(valid_enroll | valid_anc)
#df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
###anc1_ga_lt_24_weeks
#df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24
summary(df$anc_ga_lt_24_wks)
## subset ##
elig_enroll = df %>% filter(anc_ga_lt_24_wks == TRUE)
elig_enroll = elig_enroll %>% filter(NumberANCs >= 2)
dim(elig_enroll)
# t = df %>% filter(eligible == 1)
# table(t$NumberANCs >=4 )
# mean(t$NumberANCs)
# mean(t$anc1ga_anc < 16, na.rm = T)
# mean(t$NumberANCs >= 4)
#
if (type == "elig_enroll") {
return(elig_enroll)
}
# subset ##
## MOTHER BABY PAIRS ##
#deliver_within_study_w_valid_ga_2_anc
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
##all should be valid recorded GA
##elig for primary analysis
elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31")
elig_enroll$elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$NumberANCs >= 2)
elig_mother_baby = elig_enroll %>% filter(elig == T)
if (type == "analysis") {
return(elig_mother_baby)
}
## NA COME FROM MOSTLY GA RECORDED
ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
has_outcome = elig_mother_baby %>% filter(ltfu == T)
table(ltfu, useNA = "always")
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
get_elig = function(df, type) {
#df = df %>% filter(!is.na(m_age) & m_age > 15)
#df = df %>% filter(!is.na(m_age_anc) & m_age_anc > 15)
df = df %>% filter(is.na(m_age) |  m_age > 15)
df = df %>% filter(is.na(m_age_anc) | m_age_anc > 15)
summary(df$m_age_anc)
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
anc1date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
#enroll_date >=  "2017-05-22" &
#anc1date >=  "2017-05-22" &
#| (anc1date <= "2018-10-31")
valid_enroll = (enroll_date >=  "2017-05-22") & (enroll_date <= "2018-10-31")
valid_anc = (anc1date >=  "2017-05-22") & (anc1date <= "2018-10-31")
#df$valid_enroll = valid_enroll == T
table(valid_enroll, useNA = 'always')
table(valid_anc, useNA = "always")
# good up to hear
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
##departed after without clinic visit
if (type == "valid_enroll") {
df = df %>% filter(valid_enroll | valid_anc)
return(df)
} else if (type == "valid_anc_ga") {
df = df %>% filter(valid_anc & !is.na(anc1ga_anc))
return(df)
} else if (type == "valid_anc_date") {
df = df %>% filter(valid_anc)
return(df)
}
## is possible for one of these to be not valid date
df = df %>% filter(valid_enroll | valid_anc)
#df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
###anc1_ga_lt_24_weeks
#df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24
summary(df$anc_ga_lt_24_wks)
## subset ##
elig_enroll = df %>% filter(anc_ga_lt_24_wks == TRUE)
elig_enroll = elig_enroll %>% filter(NumberANCs >= 2)
dim(elig_enroll)
# t = df %>% filter(eligible == 1)
# table(t$NumberANCs >=4 )
# mean(t$NumberANCs)
# mean(t$anc1ga_anc < 16, na.rm = T)
# mean(t$NumberANCs >= 4)
#
if (type == "elig_enroll") {
return(elig_enroll)
}
# subset ##
## MOTHER BABY PAIRS ##
#deliver_within_study_w_valid_ga_2_anc
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
##all should be valid recorded GA
##elig for primary analysis
elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31")
elig_enroll$elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$NumberANCs >= 2)
elig_mother_baby = elig_enroll %>% filter(elig == T)
if (type == "analysis") {
return(elig_mother_baby)
}
## NA COME FROM MOSTLY GA RECORDED
ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
has_outcome = elig_mother_baby %>% filter(ltfu == T)
table(ltfu, useNA = "always")
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_elig = get_elig(arm2, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
dim(df1)
dim(df1_valid)
dim(df1_anc1)
dim(df1_elig)
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
returned_2_ga_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1ga)
returned_2_anc_date = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, returned_2_ga_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_elig = get_elig(arm2, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
dim(df1_valid)
dim(df1_anc1)
dim(df1_elig)
dim(df2_elig)
df1_elig = get_elig(arm1, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
dim(df1_elig)
sanc_elig = get_anc_covg(df1_elig)
sanc_valid = get_anc_covg(df1_valid)
df1_elig
dim(df1_elig)
sanc_elig = get_anc_covg(df1_elig)
sanc_elig = get_anc_covg(df1_valid)
ganc_elig = get_anc_covg(df2_valid)
sanc_elig
sanc_anc1 = get_anc_covg(df1_anc1)
ganc_anc1 = get_anc_covg(df2_anc1)
sanc_anc1
ganc_anc1
sanc_valid = get_anc_covg(df1_valid)
ganc_valid = get_anc_covg(df2_valid)
sanc_anc1 = get_anc_covg(df1_anc1)
ganc_anc1 = get_anc_covg(df2_anc1)
sanc_elig = get_anc_covg(df1_elig)
ganc_elig = get_anc_covg(df2_elig)
x = df1_elig
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
returned_2_ga_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1ga)
returned_2_anc_date = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
returned_2_anc_date
returned_2_anc_date
ga_lt_16
mean_anc
gt_4_anc
returned_2_ga_anc = c(table(!is.na(x$xdate_ancfuvst_2), useNA = "always"), n_anc1ga)
returned_2_anc_date = c(table(!is.na(x$x$date_ancfuvst_2), useNA = "always"), n_anc1date)
returned_2_ga_anc
returned_2_anc_date
(table(!is.na(x$date_ancfuvst_2), useNA = "always")
)
table(!is.na(x$date_ancfuvst_2), useNA = "always")
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
get_elig = function(df, type) {
#df = df %>% filter(!is.na(m_age) & m_age > 15)
#df = df %>% filter(!is.na(m_age_anc) & m_age_anc > 15)
df = df %>% filter(is.na(m_age) |  m_age > 15)
df = df %>% filter(is.na(m_age_anc) | m_age_anc > 15)
summary(df$m_age_anc)
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
anc1date = as.Date(df$anc1date_anc, format = "%m/%d/%Y")
#enroll_date >=  "2017-05-22" &
#anc1date >=  "2017-05-22" &
#| (anc1date <= "2018-10-31")
valid_enroll = (enroll_date >=  "2017-05-22") & (enroll_date <= "2018-10-31")
valid_anc = (anc1date >=  "2017-05-22") & (anc1date <= "2018-10-31")
#df$valid_enroll = valid_enroll == T
table(valid_enroll, useNA = 'always')
table(valid_anc, useNA = "always")
# good up to hear
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
##departed after without clinic visit
if (type == "valid_enroll") {
df = df %>% filter(valid_enroll | valid_anc)
return(df)
} else if (type == "valid_anc_ga") {
df = df %>% filter(valid_anc & !is.na(anc1ga_anc))
return(df)
} else if (type == "valid_anc_date") {
df = df %>% filter(valid_anc)
return(df)
}
## is possible for one of these to be not valid date
df = df %>% filter(valid_enroll | valid_anc)
#df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
###anc1_ga_lt_24_weeks
#df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24
summary(df$anc_ga_lt_24_wks)
## subset ##
elig_enroll = df %>% filter(anc_ga_lt_24_wks == TRUE)
elig_enroll = elig_enroll %>% filter(NumberANCs >= 2)
dim(elig_enroll)
# t = df %>% filter(eligible == 1)
# table(t$NumberANCs >=4 )
# mean(t$NumberANCs)
# mean(t$anc1ga_anc < 16, na.rm = T)
# mean(t$NumberANCs >= 4)
#
if (type == "elig_enroll") {
return(elig_enroll)
}
# subset ##
## MOTHER BABY PAIRS ##
#deliver_within_study_w_valid_ga_2_anc
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
##all should be valid recorded GA
##elig for primary analysis
elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31")
elig_enroll$elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$NumberANCs >= 2)
elig_mother_baby = elig_enroll %>% filter(elig == T)
if (type == "analysis") {
return(elig_mother_baby)
}
## NA COME FROM MOSTLY GA RECORDED
ltfu = ((!is.na(elig_mother_baby$valid_ga_lmp) & elig_mother_baby$valid_ga_lmp == T | !is.na(elig_mother_baby$valid_ga_recorded) & elig_mother_baby$valid_ga_recorded == T ))
ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
has_outcome = elig_mother_baby %>% filter(ltfu == T)
table(ltfu, useNA = "always")
}
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
returned_2_ga_anc = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1ga)
returned_2_anc_date = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, returned_2_ga_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_elig = get_elig(arm1, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
sanc_anc1 = get_anc_covg(df1_anc1)
ganc_anc1 = get_anc_covg(df2_anc1)
sanc_anc1
sanc_elig = get_anc_covg(df1_elig)
ganc_elig = get_anc_covg(df2_elig)
sanc_elig
dim(df1_elig)
ganc_elig
sanc_anc1
ganc_anc1
out = list(sanc_anc1, ganc_anc1)
names(out) = c("sanc", "ganc")
write.xlsx(out, file = sprintf("anc_covg_among_anc1_date_all_%s.xlsx", Sys.Date()), row.names = T)
out = list(sanc_elig, ganc_elig)
names(out) = c("sanc", "ganc")
write.xlsx(out, file = sprintf("anc_covg_among_anc1_date_elig_%s.xlsx", Sys.Date()), row.names = T)
dim(df1_elig)
dim(df1_anc1)
dim(df1_anc1)
dim(df1_elig)
sanc_elig
summary(df1_elig$anc1ga_anc)
summary(df1_elig$anc1date_anc)
getwd()
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
gt_2_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
returned_2_anc_date = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, returned_2_ga_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
gt_2_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
returned_2_anc_date = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, gt_2_anc, returned_2_ga_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_elig = get_elig(arm1, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
df1_anc1
dim(df1_valid)
dim(df1_anc1)
dim(df1_elig)
sanc_valid = get_anc_covg(df1_valid)
get_anc_covg = function(x){
n_anc1ga = sum(!is.na(x$anc1ga_anc))
n_anc = sum(!is.na(x$NumberANCs))
n_anc1date = sum(!is.na(x$anc1date_anc))
ga_lt_16 = c(table(x$anc1ga_anc < 16, useNA = "always"), n_anc1ga)
mean_anc = c(mean(x$NumberANCs), sd(x$NumberANCs), sum(is.na(x$NumberANCs)), n_anc)
gt_4_anc = c(table(x$NumberANCs >= 4, useNA = "always"), n_anc)
gt_2_anc = c(table(x$NumberANCs >= 2, useNA = "always"), n_anc1date)
returned_2_anc_date = c(table(!is.na(x$date_ancfuvst_2), useNA = "always"), n_anc1date)
out = data.frame(rbind(ga_lt_16, gt_4_anc, gt_2_anc, returned_2_anc_date, mean_anc))
names(out)[4] = "total (non-na)"
out$pct = out$TRUE./out$`total (non-na)`
out = round(out, 3)
out
}
df1_valid = get_elig(arm1, "valid_enroll")
df2_valid = get_elig(arm2, "valid_enroll")
df1_anc1 = get_elig(arm1, "valid_anc_date")
df2_anc1 = get_elig(arm2, "valid_anc_date")
df1_elig = get_elig(arm1, "elig_enroll")
df2_elig = get_elig(arm2, "elig_enroll")
sanc_valid = get_anc_covg(df1_valid)
ganc_valid = get_anc_covg(df2_valid)
sanc_anc1 = get_anc_covg(df1_anc1)
ganc_anc1 = get_anc_covg(df2_anc1)
sanc_elig = get_anc_covg(df1_elig)
ganc_elig = get_anc_covg(df2_elig)
sanc_anc1
ganc_elig
ganc_anc1
sanc_anc1
dim(df1_anc1)
out = list(sanc_anc1, ganc_anc1)
names(out) = c("sanc", "ganc")
write.xlsx(out, file = sprintf("anc_covg_among_anc1_date_all_%s.xlsx", Sys.Date()), row.names = T)
