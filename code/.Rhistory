df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))
source(here('code', "rw_consort_functions.R"))
source(here('code', "ga_pred", "functions.R"))
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1)
arm2 = df %>% filter(dhc %in% A2)
arm3 = df %>% filter(dhc %in% A3)
arm4 = df %>% filter(dhc %in% A4)
df1 = get_elig(arm1, "elig_enroll")
df3 = get_elig(arm3, "elig_enroll")
us_1 = get_us(df1, 2)
us_3 = get_us(df3, 4)
new_frame = make_data(us_1, us_3, "binomial", wk_thresh = 20, 1)
dim(new_frame)
nrow(new_frame)/(nrow(df1) + nrow(df3))
7.7 /22
dim(train)
plot_data = subset(train, select = c(Arm, dhc, mother_age_cat, ga_del_by_us_date, ga_del_by_us_edd, ga_at_deliv_lmp, ga_weeks_recorded, m_age_enroll))
get_auc(out_binom, data.frame(y = as.numeric(train$y < 37)), 5, "ML Algorithm for Predicting Preterm Birth", type = "sens")
get_auc(out_recorded_binom, data.frame(y = as.numeric(plot_data$ga_del_by_us_date < 37)), 5, "Register-Recorded GA for Predicting Preterm Birth")
get_auc(out_recorded_binom, data.frame(y = as.numeric(plot_data$ga_del_by_us_date < 37)), 5, "Register-Recorded GA for Predicting Preterm Birth", type = "sens")
get_auc(out_binom, data.frame(y = as.numeric(train$y < 37)), folds = 5, type = "sens",  name= "")
out = out_binom
yhat = out$SL.predict
pred = lapply(out$folds, function(x) yhat[x])
train$y
train$y = as.numeric(train$y < 37)
summary(train$y)
yhat = out$SL.predict
pred = lapply(out$folds, function(x) yhat[x])
labs = lapply(out$folds, function(x) train$y[x])
pred
labs
est = pred[[1]]
y = labs[[1]]
yh = sort(est)
yh
spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
get+spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
thresh
(sapply(yh, function(x) get_spec(x, est, y))
)
yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
length(yhat)
est[y == 1]
c(mean(est[y == 1] > thresh), thresh)
get_sens = function(est, y) {
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
sens = c(mean(est[y == 1] > thresh), thresh)
sens
}
get_sens = function(est, y) {
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
thresh = yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
sens = c(mean(est[y == 1] > thresh))
sens
}
cvsens =   mapply(function(x, y) get_sens(x, y, train), pred, labs)
cvsens =   mapply(function(x, y) get_sens(x, y), pred, labs)
cvsens
mean(cvsens)
140 - 68
140 - 66
pred
labs
est = pred[[1]]
y = labs[[2]]
est = pred[[2]]
length(y)
length(est)
length(pred[[1]])
yh = sort(est)
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
yh
get_spec = function(x, yhat, y) {
out = mean(yhat[y == 0] <= x)
out
}
est
yhat
get_spec(x, est, y)
sapply(yh, function(x) get_spec(x, est, y))
yh[min(which(sapply(yh, function(x) get_spec(x, est, y)) >= .80))]
est[y == 1]
sens = c(mean(est[y == 1] > thresh))
sens
library(knitr)
library(here)
library(dplyr)
library(geepack)
library(parsedate)
source(here('code', "rw_consort_functions.R"))
dat = read.csv(here("data", "epds_Data.csv"))
dat
df = read.csv(here('data', "ParticipantSurveyCohortMerged.csv"))
df = read.csv(here('data', "ParticipantSurveyCohortMerged_15Oct2019_names\ removed.csv"))
dim(df)
df = read.csv(here('data', "ParticipantSurveyCohortMerged.csv"))
df = read.csv(here('data', "ParticipantSurveyCohortMerged_15Oct2019_names\ removed.csv"))
by_fac = split(df,c(df$study_id_dhc))
table(df$dhc)
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
dim(arm1)
dim(arm2)
dim(df)
arm1$epds_tot_blfinal
arm1$epds_tot_blfinal
arm1$epds_tot_elfinal
sapply(by_fac ,function(x) sum(!is.na(x$epds_tot_elfinal)))
arm1 = split(arm1, arm1$dhc)
sapply(arm1 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
arm2 = split(arm2, arm2$dhc)
sapply(arm2 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
arm1 = arm1 %>% filter(!(dhc %in% c(111, 331, 541, 545)))
arm1 = arm2 %>% filter(!(dhc %in% c(114, 223, 334, 543)))
arm1 = split(arm1, arm1$dhc)
arm2 = split(arm2, arm2$dhc)
sapply(arm1 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
sapply(arm2 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
arm1 = arm1 %>% filter(!(dhc %in% c(111, 331, 541, 545)))
arm2 = arm2 %>% filter(!(dhc %in% c(114, 223, 334, 543)))
arm1 = split(arm1, arm1$dhc)
arm2 = split(arm2, arm2$dhc)
sapply(arm1 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
sapply(arm2 ,function(x) sum(!is.na(x$epds_tot_elfinal)))
means1 = lapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)]))
means2 = lapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)]))
means1
means2
arm1
nrow(arm1)
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
arm1 = arm1 %>% filter(!(dhc %in% c(111, 331, 541, 545)))
arm2 = arm2 %>% filter(!(dhc %in% c(114, 223, 334, 543)))
arm1 = split(arm1, arm1$dhc)
arm2 = split(arm2, arm2$dhc)
lapply(arm1, nrow)
means1 = lapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)]))
means1
x= arm1[[1]]
dim9x
dim(x)
mean(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)])
class(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)])
summary(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)])
(x$epds_tot_elfinal[!is.na(x$epds_total_elfinal)])
x$epds_tot_elfinal
x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]
means1 = lapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means2 = lapply(arm2, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means1
means2
means1 = sapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means2 = sapply(arm2, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means1
means2
means1 = sapply(arm1, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means2 = sapply(arm2, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
means1
means2
mean1 = round(sapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)])), 2)
mean2 = round(sapply(arm2, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)])), 2)
med1 = sapply(arm1, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
med2 = sapply(arm2, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
med1
med2
mean1
mean2
med1
mean1
mean1
mean1 = round(sapply(arm1, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)])), 3)
mean2 = round(sapply(arm2, function(x) mean(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)])), 3)
data.frame(mean = mean1, group = rep("sanc", length(mean1))
#med1 = sapply(arm1, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
#med2 = sapply(arm2, function(x) median(x$epds_tot_elfinal[!is.na(x$epds_tot_elfinal)]))
med1
mean1
med2
mean2
med1
data.frame(mean = mean1, group = rep("sanc", length(mean1)))
out1 = data.frame(mean = mean1, group = rep("sanc", length(mean1)))
out2 = data.frame(mean = mean2, group = rep("ganc", length(mean2)))
out = rbind(out1, out2)
out
kruskal.test(mean ~ group, data = out)
t.test(mean1, mean2, alternative = "two.sided", var.equal = FALSE)
ttest = t.test(mean1, mean2, alternative = "two.sided", var.equal = FALSE)
summary(ttest)
ktest = kruskal.test(mean ~ group, data = out)
summary(ktest)
ktest
ktest$statistic
ktest$parameter
ktest$method
ttest = t.test(mean1, mean2, alternative = "two.sided", var.equal = FALSE)
ttest
5,27 - 3.46
5.27 - 3.46
ttest$estimate
ttest$conf.int
se(mean1)/sqrt(14)
sd(mean1)/sqrt(14)
var(mean1) + var(mean2)
sqrt((var(mean1) + var(mean2))/14)
1.81 + 1.32 * 1.96
1.81 - 1.32 * 1.96
5.276 - 3.466
ktest = kruskal.test(mean ~ group, data = out)
ktest
library(knitr)
library(here)
library(dplyr)
library(geepack)
library(parsedate)
opts_chunk$set(fig.width=12, fig.height=4, fig.path='RnwFigs/',
warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
if(!require("qtl")) install.packages("qtl", repos="http://cran.us.r-project.org")
source(here('code', "rw_consort_functions.R"))
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY18Sep2019.csv'))
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)
A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)
arm1 = df %>% filter(dhc %in% A1 | dhc %in% A2)
arm2 = df %>% filter(dhc %in% A3 | dhc %in% A4)
a1 = get_consort(arm1)
a2 = get_consort(arm2)
a1
a2
a1 = get_consort(arm1)
a2 = get_consort(arm2)
df = arm1
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
valid_enroll = enroll_date >=  "2017-05-22" & enroll_date <= "2018-10-31"
df$valid_enroll = valid_enroll == T
elig_enroll_date = table(df$valid_enroll, useNA = 'always')
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
df = df %>% filter(valid_enroll == T)
df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
departed_without_clinic = table(df$enroll_but_no_anc1, useNA = "always")
(departed_without_clinic)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
anc1_ga_lt_24 = table(df$anc_ga_lt_24_wks, useNA = 'always')
anc1_ga_lt_24
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
valid_enroll = enroll_date >=  "2017-05-22" & enroll_date <= "2018-10-31"
df$valid_enroll = valid_enroll == T
elig_enroll_date = table(df$valid_enroll, useNA = 'always')
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
df = df %>% filter(valid_enroll == T)
df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
departed_without_clinic = table(df$enroll_but_no_anc1, useNA = "always")
(departed_without_clinic)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
anc1_ga_lt_24 = table(df$anc_ga_lt_24_wks, useNA = 'always')
anc1_ga_lt_24
out_elig_enroll = data.frame(rbind(elig_enroll_date, departed_without_clinic, anc1_ga_lt_24))
elig_enroll = df %>% filter(anc_ga_lt_24_wks)
table(elig_enroll$anc1ga_anc < 16, useNA = "always")/nrow(elig_enroll)
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
valid_recorded_ga_del = c(table(elig_enroll$valid_ga_recorded, useNA = "always"), 0)[c(3,1,2)]
names(valid_recorded_ga_del)[1] = FALSE
valid_ga_lmp_del = table(elig_enroll$valid_ga_lmp, useNA = "always")
delivered_before_march_31 = table(elig_enroll$date_del <= "2019-03-31", useNA = "always")
delivered_before_march_31
df = arm1
enroll_date = as.Date(df$enroll_date, format = "%m/%d/%Y")
valid_enroll = enroll_date >=  "2017-05-22" & enroll_date <= "2018-10-31"
df$valid_enroll = valid_enroll == T
elig_enroll_date = table(df$valid_enroll, useNA = 'always')
dates = subset(df, select = c(anc1date_anc, date_ancfuvst_2,
date_ancfuvst_2b, date_ancfuvst_2c, date_ancfuvst_2d))
number_missing = is.na(dates)
number_missing_dates = rowSums(number_missing)
df$number_anc = 5 - number_missing_dates
df$anc1ga_anc = as.numeric(as.character(df$anc1ga_anc))
df = df %>% filter(valid_enroll == T)
df$enroll_but_no_anc1 = (!is.na(df$enroll_date) & is.na(df$anc1date_anc))
departed_without_clinic = table(df$enroll_but_no_anc1, useNA = "always")
(departed_without_clinic)
df$anc_ga_lt_24_wks = df$anc1ga_anc <= 24 & (df$enroll_but_no_anc1 == F)
anc1_ga_lt_24 = table(df$anc_ga_lt_24_wks, useNA = 'always')
anc1_ga_lt_24
out_elig_enroll = data.frame(rbind(elig_enroll_date, departed_without_clinic, anc1_ga_lt_24))
elig_enroll = df %>% filter(anc_ga_lt_24_wks)
table(elig_enroll$anc1ga_anc < 16, useNA = "always")/nrow(elig_enroll)
elig_enroll$date_del = as.Date(elig_enroll$date_delivery_mat, format = "%m/%d/%Y")
elig_enroll$lmp = as.Date(elig_enroll$lmp_anc, format = "%m/%d/%Y")
elig_enroll$ga_at_del_by_lmp = as.numeric((elig_enroll$date_del - elig_enroll$lmp)/7)
elig_enroll$valid_ga_recorded = elig_enroll$ga_weeks >= 20 & elig_enroll$ga_weeks <= 44
elig_enroll$valid_ga_lmp = elig_enroll$ga_at_del_by_lmp >= 20 & elig_enroll$ga_at_del_by_lmp <= 44
valid_recorded_ga_del = c(table(elig_enroll$valid_ga_recorded, useNA = "always"), 0)[c(3,1,2)]
names(valid_recorded_ga_del)[1] = FALSE
valid_ga_lmp_del = table(elig_enroll$valid_ga_lmp, useNA = "always")
delivered_before_march_31 = table(elig_enroll$date_del <= "2019-03-31", useNA = "always")
delivered_before_march_31
delivered_out = elig_enroll %>% filter(date_del > "2019-03-31" | is.na(date_del) )
elig = (delivered_out$anc1ga_anc <= 24 & delivered_out$number_anc >= 2)
anc_lt_24_and_2_anc_visits_del_out = table(elig, useNA = 'always')
elig_enroll = elig_enroll %>% filter(date_del <= "2019-03-31")
elig = (elig_enroll$anc1ga_anc <= 24 & elig_enroll$number_anc >= 2)
anc_lt_24_and_2_anc_visits = table(elig, useNA = 'always')
elig_mother_baby = elig_enroll %>% filter(elig == T)
table(elig_mother_baby$valid_ga_lmp, useNA = 'always')
table(elig_mother_baby$valid_ga_lmp, useNA = 'always')
ltfu = ( elig_mother_baby$valid_ga_lmp == T | elig_mother_baby$valid_ga_recorded == T )
attained_outcome = c(table(ltfu, useNA = 'always'), 0)[c(3, 1, 2)]
attained_outcome
5730 + 6397
