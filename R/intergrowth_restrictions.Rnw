\documentclass[12pt]{article}

%\usepackage{times}
\usepackage{hyperref}
\hypersetup{pdfpagemode=UseNone} % don't show bookmarks on initial view
\hypersetup{colorlinks, urlcolor={blue}}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{8.65in}
\setlength{\footskip}{0.35in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\begin{document}

%\sffamily
{\textbf{Gestational Age Prediction Using Stochastic Intervention for Variable Importance}}

%\href{http://kbroman.org}{Karl W Broman}
Alejandra Benitez and the Preterm Birth Initiative

%This is a portion of the ``\href{http://www.rqtl.org/rqtltour2.pdf}{A shorter tour of R/qtl}''
%tutorial, developed here in multiple formats to illustrate the use of knitr.
%This particular document is written with \href{http://www.latex-project.org}{LaTeX}.

<<knitr_options, include=FALSE>>=
library(knitr)
library(here)
library(dplyr)
library(geepack)
library(parsedate)
opts_chunk$set(fig.width=12, fig.height=4, fig.path='RnwFigs/',
warning=FALSE, message=FALSE, tidy=FALSE)
options(width=60)
set.seed(53079239)
# install R/qtl package if necessary:
if(!require("qtl")) install.packages("qtl", repos="http://cran.us.r-project.org")
@

\bigskip
%\sffamily 
\textbf{Abstract}
\newline
%\nopagebreak



<<echo=FALSE, cache=FALSE>>=
source(here('code', "rw_consort_functions.R"))
source(here('code', "ga_pred", "functions.R"))
girls_ig = read.csv(here('data', 'girls_ig.csv'))
boys_ig = read.csv(here('data', 'boys_ig.csv'))
@

<<load_data, echo=TRUE>>=
## marginal probability of weeks
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY18Sep2019.csv'))
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY16Sep2019.csv'))

#df = read.csv(here('data', 'FinalAnalysisV4ConsentedLabelledRecodedOutliers28July2019.csv'))
df = read.csv(here('data', 'ARMS1_2__3Corrected_4FinalAnalysisV4ConsentedLabelledRecodedOutliersMATERNALFACILITY24Sep2019WMatWtFU.csv'))

df = read.csv(here('data', "MatCohort_USadded_30Oct19_BP.csv"))
##neonatal set
df = read.csv(here('data', "RwandaFINAL_NEONATALDataSetwUSadded_30OcT2019.csv"))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))



## make quads 
pair1 = c(1, 10, 8, 3, 13, 4, 2, 17, 5)
pair2 = c(9, 11, 14, 16, 6, 15, 12, 18, 7)
p2 = rep(NA, 18)
p2[pair1] = pair2
p2[pair2] = pair1

df$Pair_US = p2[df$Pair]

quad = strsplit(paste(df$Pair, df$Pair_US), " ")
quad = paste(lapply(quad, function(j) sort(as.numeric(j))))
df$quad = quad

df$Pair_USUPT = paste(df$quad, df$StudyGrp)

eligible_only = df %>% filter(eligible == 1 )
eligible = df %>% filter(eligible == 1 & deliveredbyMarch_31_2019 )

analysis = eligible %>% filter(!is.na(validgestatdel))

table(eligible_only$StudyGrp)
table(analysis$StudyGrp)

@

<<inclusion_criteria, echo = F>>=
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)

A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)

@


<<make_ig_restriction>>=
make_ig = function(df, ga_type) {
  ga_meas = round(df[, ga_type])
  df = df[ga_meas >= 24 & ga_meas <= 43, ]

 # if (ga_type == "ga_del_by_us_date") {
      df$clean_bwt = df$weight / 1000
      df$clean_bwt[df$clean_bwt == 32] <- 3.2
      df$clean_bwt[df$clean_bwt == 27] <- 2.7
      df$lower = ifelse(df$sex == 0, girls_ig$pct3[match(ga_meas, girls_ig$ga)],
                    boys_ig$pct3[match(ga_meas, boys_ig$ga)])
      df$upper = ifelse(df$sex == 0,  girls_ig$pct97[match(ga_meas, girls_ig$ga)],
                    boys_ig$pct97[match(ga_meas, boys_ig$ga)])


  df$int_grwth =  as.numeric(df$clean_bwt >= df$lower & df$clean_bwt <= df$upper)
  return((df$int_grwth))
  
}

@

<<among US only>>=
  df2 = df %>% filter(StudyArm == 2)
  df4 = df %>% filter(StudyArm == 4)
# 
  df1 = get_elig(arm1, "elig_enroll")
  df3 = get_elig(arm3, "elig_enroll")
  
  df1us = get_us(df1, 1)
  df2us = get_us(df2, 2)
  df3us = get_us(df3, 3)
  df4us = get_us(df4, 4)

  df1_ga = df1us %>% filter(back_calc_dod_ga_recorded >= 6 & back_calc_dod_ga_recorded <= 22)
  df3_ga = df3us %>% filter(back_calc_dod_ga_recorded >= 6 & back_calc_dod_ga_recorded <= 22)
  
  df2_ga = df2us %>% filter(ga_at_us >=6 & ga_at_us <= 22)
  df4_ga = df4us %>% filter(ga_at_us >=6 & ga_at_us <= 22)
  ## for actual SL, make_data needs to filter out any facilities w <11 obs, check dates and completion of data
  ## currently this is not implemented for larger summary of sample
  train = make_data(df2_ga, df4_ga, "binomial", wk_thresh = 22, 2)

  dim(train)
  us_all = get_n(make_ig(train, "ga_del_by_us_date"))
  us_ptb = get_n(make_ig(train[train$ga_del_by_us_date < 37, ], "ga_del_by_us_date"))

  validg_all = get_n(make_ig(train, 'validgestatdel'))
  validg_ptb = get_n(make_ig(train[train$validgestatdel < 37, ], 'validgestatdel'))

  ga_wks_all = get_n(make_ig(train, 'ga_weeks_recorded'))
  ga_wks_ptb = get_n(make_ig(train[train$ga_weeks_recorded < 37, ], 'ga_weeks_recorded'))
  
  out = rbind(validg_all, validg_ptb, ga_wks_all, ga_wks_ptb, us_all, us_ptb)
  out
  write.csv(out, file = "intergrowth_ga_neonatal_eligible.csv")

@ 

<<by_pair, echo = F>>=
  make_analysis_data = function(df, usupt) {

      arm1 = df %>% filter(dhc %in% A1 | dhc %in% A3)
      arm2 = df %>% filter(dhc %in% A2 | dhc %in% A4)
      
      df_all = data.frame(rbind(arm1, arm2))


      df_all$id = as.numeric(df_all$dhc)
      df_all$weight = 1/nrow(df_all)
      
      df_all$Y = df_all$validgestatdel
      df_all$anc1ga_anc
      table(df_all$NumberANCs)
      df_all$at_least_4 = df_all$NumberANCs >= 4
      df_all$at_least_3 = df_all$NumberANCs >= 3
      df_all$ga_lt_16 = df_all$anc1ga_anc <= 16
      table(df_all$ga_lt_16)
      
      if (usupt) {
        df_all$A <- df_all$InUSUPTarm
        df_all$Pair = df_all$Pair_USUPT
        
      } else {
        df_all$A <- df_all$StudyGrp
      }
      data = subset(df_all, select = c(validgestatdel, at_least_4, ga_lt_16, at_least_3, anc1ga_anc, 
                                   weight, A, id, Pair, Pair_USUPT, quad, InUSUPTarm, StudyGrp, StudyArm))
      table(data$A, data$Pair)
      return(data)
    
  }

  summary_by_arm = function(df) {
    
    out = lapply(split(df, df$A), function(j) sapply(j[, 2:5], get_n))
    out
  
  }

  eligible_studygrp = make_analysis_data(eligible_only, usupt = F)
  analysis_studygrp = make_analysis_data(analysis, usupt = F)
  
  eligible_study = summary_by_arm(eligible_studygrp)
  analysis_study = summary_by_arm(analysis_studygrp)
  
  out_study = c(eligible_study, analysis_study)
  write.xlsx(out_study, file = "summaries_table6_by_arm.xlsx")

  eligible_usupt = make_analysis_data(eligible_only, usupt = T)
  analysis_usupt = make_analysis_data(analysis, usupt = T)

  out_usupt = c(summary_by_arm(eligible_usupt), summary_by_arm(analysis_usupt))
  write.xlsx(out_usupt, file = "summaries_table7_by_arm.xlsx")

  lapply(split(analysis_studygrp, analysis_studygrp$Pair_USUPT), function(j) table(j$id))


@



<<sessionInfo, include=TRUE, echo=TRUE, results='markup'>>=
sessionInfo()
@

% \bibliography{ga_pred} 
% \bibliographystyle{ieeetr}

\end{document}
