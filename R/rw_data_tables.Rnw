\documentclass[12pt]{article}

%\usepackage{times}
\usepackage{hyperref}
\hypersetup{pdfpagemode=UseNone} % don't show bookmarks on initial view
\hypersetup{colorlinks, urlcolor={blue}}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{8.65in}
\setlength{\footskip}{0.35in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\begin{document}

%\sffamily
{\textbf{Gestational Age Prediction Using Stochastic Intervention for Variable Importance}}

%\href{http://kbroman.org}{Karl W Broman}
Alejandra Benitez and the Preterm Birth Initiative

%This is a portion of the ``\href{http://www.rqtl.org/rqtltour2.pdf}{A shorter tour of R/qtl}''
%tutorial, developed here in multiple formats to illustrate the use of knitr.
%This particular document is written with \href{http://www.latex-project.org}{LaTeX}.

<<knitr_options, include=FALSE>>=
  library(knitr)
  library(here)
  library(dplyr)
  library(geepack)
  library(parsedate)
  library(broom)
  library(geepack)
  library(openxlsx)
  opts_chunk$set(fig.width=12, fig.height=4, fig.path='RnwFigs/',
  warning=FALSE, message=FALSE, tidy=FALSE)
  options(width=60)
  set.seed(53079239)
# install R/qtl package if necessary:
if(!require("qtl")) install.packages("qtl", repos="http://cran.us.r-project.org")
@



<<echo=FALSE, cache=FALSE>>=
source(here('R', "rw_consort_functions.R"))
source(here("ga_pred_files", "functions.R"))
@

<<load_data, echo=TRUE>>=
## marginal probability of weeks

df = read.csv(here('data', "MatCohort_USadded_30Oct19_BP.csv"))
df[df == "#NULL!" | df == " " | df == ""] <- NA
id_arm = read.csv(here('data', 'RW_Study_ID.csv'))

## make quads 


pair1 = c(1, 10, 8, 3, 13, 4, 2, 17, 5)
pair2 = c(9, 11, 14, 16, 6, 15, 12, 18, 7)
p2 = rep(NA, 18)
p2[pair1] = pair2
p2[pair2] = pair1

df$Pair_US = p2[df$Pair]

quad = strsplit(paste(df$Pair, df$Pair_US), " ")
quad = paste(lapply(quad, function(j) sort(as.numeric(j))))
df$quad = quad

df$Pair_USUPT = paste(df$quad, df$StudyGrp)


eligible_only = df %>% filter(eligible == 1 )
eligible = df %>% filter(eligible == 1 & deliveredbyMarch_31_2019 )

analysis = eligible %>% filter(!is.na(validgestatdel))


##split into arms
@

<<inclusion_criteria, echo = F>>=
A1 = c(333, 436, 544, 120, 110, 545, 111, 224, 221)
A2 = c(435, 331, 541, 115, 113, 539, 226, 329, 332)

A3 = c(330, 438, 540, 117, 116, 542, 112, 328, 223)
A4 = c(437, 327, 543, 114, 119, 334, 118, 222, 225)

@


<<by_pair, echo = F>>=

  summary_by_arm = function(df) {
    
    out = lapply(split(df, df$A), function(j) sapply(j[, 2:5], get_n))
    out
  
  }
  
@

<<run_fn_above, echo = F>>=
  
  eligible_studygrp = make_analysis_data(eligible_only, usupt = F)
  analysis_studygrp = make_analysis_data(analysis, usupt = F)
  
  eligible_study = summary_by_arm(eligible_studygrp)
  analysis_study = summary_by_arm(analysis_studygrp)
  
  out_study = c(eligible_study, analysis_study)
  #write.xlsx(out_study, file = "summaries_table6_by_arm.xlsx")

  eligible_usupt = make_analysis_data(eligible_only, usupt = T)
  analysis_usupt = make_analysis_data(analysis, usupt = T)

  out_usupt = c(summary_by_arm(eligible_usupt), summary_by_arm(analysis_usupt))

@


<<do_gee, echo = F>>=
  do_gee = function(df_all, filename) {
    
    data = df_all

  gee.fit1 <- geese(formula(at_least_4 ~ A + Pair), id= id, data= data[order(data$id),], 
                  family = binomial(link ="logit"), corstr="exch")
  gee.fit2 <- geese(formula(ga_lt_14 ~ A + Pair), id= id, data= data[order(data$id),], 
                    family = binomial(link ="logit"), corstr="exch")
  gee.fit4 <- geese(formula(anc1ga_anc ~ A + Pair), id= id, data= data[order(data$id),], 
                    family = gaussian(link ="identity"), corstr="exch")
  gee.fit5 <- geese(formula(NumberANCs ~ A + Pair), id= id, data= data[order(data$id),], 
                    family = gaussian(link ="identity"), corstr="exch")
  #save(gee.fit4, file = "gee_ga_at_anc1.RData")
  write.csv(summary(gee.fit4)$mean, file = "gee_ga_at_anc1.csv")
  
  out = rbind(  c(summary(gee.fit1)$mean[2, c(1,2,4)], summary(gee.fit1)$mean[1, c(1,2,4)]),
                c(summary(gee.fit2)$mean[2, c(1,2,4)], summary(gee.fit2)$mean[1, c(1,2,4)]),
                c(summary(gee.fit4)$mean[2, c(1,2,4)], summary(gee.fit4)$mean[1, c(1,2,4)]),
                c(summary(gee.fit5)$mean[2, c(1,2,4)], summary(gee.fit5)$mean[1, c(1,2,4)]))
  rownames(out) = c("at_least_4anc", "ga_lt_14_anc1", "mean_ga_anc1", "mean_anc")
  #write.csv(out, file = sprintf("%s_%s.csv", filename, Sys.Date()), row.names = T)
  out 
  }
@

<<aggregate_outcomes, echo = F>>=
  ## for 
  #df = analysis_studygrp
  files = list.files(here('R', 'pvalues/'), pattern = "*.csv", full.names = F, recursive = FALSE)

  
  aggregate_cluster = function(df, file) {
    by_arm = split(df, df$A)
    pooled = lapply(by_arm, function(x) c(get_n(x$at_least_4), get_n(x$ga_lt_14), get_n(x$anc1ga_anc), get_n(x$NumberANCs)))
    agg = aggregate(subset(df, select = c(id, A, at_least_4, ga_lt_14, anc1ga_anc, NumberANCs)), 
                    by = list(id = df$id), FUN = function(x) mean(x, na.rm = T))
    by_arm = split(agg, agg$A)
    clustered = lapply(by_arm, function(j) apply(subset(j, select = c(at_least_4, ga_lt_14, anc1ga_anc, NumberANCs)), 2, 
                                            function(x) round(c(mean(x), sd(x)), 4) ) )

           
    clustered[[1]] = rbind(clustered$`0`, pooled$`0`)
    pval = read.csv(here('R copy', 'pvalues', file))
    row.names(clustered[[1]]) = c("estimated cluster_adj", "sd cluster adj", "pooled estimate (n)")
    clustered[[2]] = rbind(clustered$`1`, pooled$`1`, round(pval$p, 4))
    row.names(clustered[[2]]) = c("estimated cluster_adj", "sd cluster adj", "pooled estimate (n)", "p-values")

    names(clustered) = c("control", "intervention")
    # aggregate(analysis_study)
    clustered
    
  }
  # write.xlsx(aggregate_cluster(eligible_studygrp, files[3]), row.names = T, file = sprintf("eligible_studygrp_pval_%s.xlsx", Sys.Date()))
  

  # write.xlsx(aggregate_cluster(eligible_usupt, files[4]), row.names = T, file = sprintf("eligible_usupt_pval_%s.xlsx", Sys.Date()))
  


@

<<rungee, echo = F>>=
do_gee(eligible_studygrp, filename = "eligible_studygrp")
do_gee(eligible_usupt, filename = "eligible_usupt")

do_gee(analysis_studygrp, filename = "analysis_studygrp")
do_gee(analysis_usupt, filename = "analysis_usupt")

@


\bigskip
{\sffamily \textbf{R and package versions used}}
\nopagebreak




<<sessionInfo, include=TRUE, echo=TRUE, results='markup'>>=
sessionInfo()
@

% \bibliography{ga_pred} 
% \bibliographystyle{ieeetr}

\end{document}
